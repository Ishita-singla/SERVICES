{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\components\\\\viewAddtocart.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n// import { Link } from 'react-router-dom';\n\n// const ViewAddtocart = () => {\n//     const [items,setItems]=useState([]);\n//     const [show, setShow] = useState(false);\n//     const [deleteId, setDeleteId] = useState(null);\n\n//     const fetchData=async()=>{\n//         try{\n//             const response=await axios.get(\"http://localhost:5001/api/viewaddtocart\");\n//             console.log(\"cart data\",response.data);\n//             setItems(response.data);\n//         }catch(err){\n//             console.log(\"error during fetching blogs data\",err);\n//         }\n//     };\n//     useEffect(()=>{\n//         fetchData();\n//         },[]);\n\n//     // डिलीट करने के लिए Modal Open करें\n//     const handleShow = (id) => {\n//         console.log(\"Item to be deleted:\", id);\n//         setDeleteId(id);\n//         setShow(true);\n//     };\n\n//     // डिलीट कन्फर्म करें\n//     const deleteItem = async () => {\n//         if (!deleteId) {\n//             console.log(\"No item selected for deletion.\");\n//             return;\n//         }\n\n//         try {\n//             console.log(\"Deleting item:\", deleteId);\n//             await axios.delete(`http://localhost:5001/api/deleteitem/${deleteId}`);\n\n//             // डिलीट होने के बाद UI अपडेट करें\n//             setItems(items.filter((item) => item._id !== deleteId));\n//             setShow(false); // Modal बंद करें\n//         } catch (err) {\n//             console.log(\"Error deleting item:\", err);\n//         }\n//     };\n\n//   return (\n//     <div className=\"container my-5\">\n//     <h2 className=\"text-center mb-4\">Cart items</h2>\n//     <div className=\"row\">\n//         {items.map((item) => (\n//             <div key={item._id} className=\"col-md-4 mb-4\">\n//                 <div className=\"card h-100\">\n//                     <img src={item.smallsubcategoryimage}  className=\"card-img-top p-5\" style={{ height: \"250px\", width: \"100%\", objectFit: \"cover\" }}  />\n//                     <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{item.subcategoryname}</h5>\n\n//                         <h5 className=\"card-title\">{item.smallsubcategoryname}</h5>\n//                         <h5 className=\"card-text\">{item.Price}</h5>\n//                         <div className=\"mb-0 d-flex  \">\n//                             {/* <Link to={`/blogdetail/${item._id}`} className=\"btn btn-primary btn-sm\">\n\n//                                 Read More\n//                             </Link> */}\n//                             <button className=\"btn btn-danger btn-sm\" onClick={() => handleShow(item._id)}>\n//                                 Remove\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         ))}\n//     </div>\n//     {/* Delete Confirmation Modal */}\n//     <Modal show={show} onHide={() => setShow(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Confirm Delete</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Are you sure you want to delete this item?</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"secondary\" onClick={() => setShow(false)}>\n//                         Cancel\n//                     </Button>\n//                     <Button variant=\"danger\" onClick={deleteItem}>\n//                         Delete\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n\n// </div>\n\n//   )\n// }\n\n// export default ViewAddtocart;\n\n// import { useEffect, useState } from \"react\";\n// import { Link,useNavigate } from \"react-router-dom\";\n\n// const ViewAddtocart = () => {\n//   const [cart, setCart] = useState([]);\n//   const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\n//   const [orderplaced,setorderplaced]=useState(false);\n//   const [deliveryPreference, setDeliveryPreference] = useState(\"normal\");\n//   const navigate = useNavigate();\n\n//   // useEffect(() => {\n//   //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n//   //   setCart(storedCart);\n//   // }, []);\n\n//   // const updateCart = (updatedCart) => {\n//   //   setCart(updatedCart);\n//   //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//   // };\n\n//   // replace\n//   const email = localStorage.getItem(\"Email\") || \"guest\";\n\n// useEffect(() => {\n//   const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n//   setCart(storedCart);\n// }, [email]);\n\n// const updateCart = (updatedCart) => {\n//   setCart(updatedCart);\n//   localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n//   localStorage.setItem(\"cartcount\", updatedCart.length);\n//   window.dispatchEvent(new Event(\"storage\"));\n// };\n\n//   const handleIncreaseQuantity = (index) => {\n//     const updatedCart = cart.map((item, i) =>\n//       i === index\n//         ? { ...item, quantity: item.quantity + 1, Price: (item.quantity + 1) * (item.Price / item.quantity) }\n//         : item\n//     );\n//     updateCart(updatedCart);\n//   };\n\n// const handleDecreaseQuantity = (index) => {\n//     const updatedCart = cart\n//       .map((item, i) => {\n//         if (i === index) {\n//           const newQuantity = item.quantity - 1;\n//           if (newQuantity === 0) return null; // Mark for removal\n//           return { \n//             ...item, \n//             quantity: newQuantity, \n//             Price: (newQuantity * (item.Price / item.quantity)).toFixed(2) \n//           };\n//         }\n//         return item;\n//       })\n//       .filter(item => item !== null); // Remove items marked as null\n\n//     updateCart(updatedCart);\n\n//     const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\n//     setcartcount(newCartCount);\n\n//     // Store updated cart and cart count in localStorage\n//     localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//     localStorage.setItem(\"cartcount\", newCartCount);\n\n//     window.dispatchEvent(new Event(\"storage\"));\n\n//   };\n\n//   const handleRemoveItem = (index) => {\n//     const updatedCart = cart.filter((_, i) => i !== index);\n//     updateCart(updatedCart);\n//   };\n\n//   const handlePlaceOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n\n//     if (!userId || cart.length === 0) {\n//       alert(\"Invalid order data. Please log in and add items.\");\n//       return;\n//     }\n//     const extracharge=deliveryPreference===\"Fast\"? 50 :0;\n//     const finalAmount=parseFloat(totalAmount)+extracharge;\n\n//     try {\n//       const response = await fetch(\"http://localhost:5001/api/orderplaced\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId,\n//           cartItems: cart,\n//           totalAmount:finalAmount,\n//           deliveryPreference, // <== ADD THIS LINE\n//           userEmail:localStorage.getItem(\"Email\"),\n//         }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.status === 201) {\n//         alert(data.message);\n//         // Reset cart\n//         localStorage.removeItem(`cart_${email}`);\n//         localStorage.setItem(\"cartcount\", 0);\n//         setCart([]);\n//         setcartcount(0);\n//         setorderplaced(true);\n//         window.dispatchEvent(new Event(\"storage\"));\n//       } else {\n//         alert(data.message || \"Order not placed\");\n//       }\n//     } catch (error) {\n//       alert(\"Something went wrong. Please try again.\");\n//       console.error(\"Order placement error:\", error);\n//     }\n//   };\n\n//   // const placeOrder = async () => {\n//   //   const userId = localStorage.getItem(\"USER\");\n//   //   navigate(`/Checkout/${userId}`);\n\n//   // };\n//   const placeOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n//     navigate(`/Checkout/${userId}`, {\n//       state: {\n//         deliveryPreference,\n//         totalAmount: parseFloat(totalAmount),\n//         finalAmount: parseFloat(totalAmount) + (deliveryPreference === \"Fast\" ? 50 : 0)\n//       }\n//     });\n//   };\n\n//   const totalAmount= cart\n//   .reduce((acc, item) => acc + Number(item.Price), 0)\n//   .toFixed(2);\n\n//   return (\n//     // <div className=\"container my-5\">\n//     //   <h2 className=\"text-center mb-4\">Your Cart</h2>\n//     //   {cart.length === 0 ? (\n//     //     <p className=\"text-center\">Your cart is empty.</p>\n//     //   ) : (\n//     //     <div className=\"row\">\n//     //       {cart.map((item, index) => (\n//     //         <div key={index} className=\"col-md-4 mb-4\">\n//     //           <div className=\"card\">\n//     //             <img src={item.image} className=\"card-img-top\" alt={item.name} />\n//     //             <div className=\"card-body\">\n//     //               <h5>{item.name}</h5>\n//     //               <p>Price: ₹{item.Price}</p>\n//     //               <p>Quantity: {item.quantity}</p>\n\n//     //               <div className=\"d-flex justify-content-between\">\n//     //                 <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\n//     //                 <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\n//     //                 <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\n//     //               </div>\n//     //             </div>\n//     //           </div>\n//     //         </div>\n//     //       ))}\n\n//     //     </div>\n\n//     //   )}\n//     // </div>\n\n// //     <div className=\"container my-5\">\n// //   <h2 className=\"text-center mb-4\">Your Cart</h2>\n// //   {cart.length === 0 ? (\n// //     <p className=\"text-center\">Your cart is empty.</p>\n// //   ) : (\n// //     <div className=\"row\">\n\n// //       {/* t Column: Cart Items */}\n// //       <div className=\"col-md-8\">\n// //         <div className=\"row\">\n// //           {cart.map((item, index) => (\n// //             <div key={index} className=\"col-md-6 mb-4\">\n// //               <div className=\"card\">\n// //                 <img src={item.image} className=\"card-img-top\" alt={item.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5>{item.name}</h5>\n// //                   <p>Price: ₹{item.Price}</p>\n// //                   <p>Quantity: {item.quantity}</p>\n\n// //                   <div className=\"d-flex justify-content-between\">\n// //                     <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\n// //                     <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\n// //                     <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           ))}\n// //         </div>\n// //       </div>\n\n// //       {/* right Column: Cart Summary */}\n\n// // <div className=\"col-md-4 mb-4\">\n// //   <div className=\"card p-3\">\n// //     <h5 className=\"mb-3\">Cart Summary</h5>\n// //     <ul className=\"list-group mb-3\">\n// //       {cart.map((item, index) => (\n// //         <li key={index} className=\"list-group-item d-flex justify-content-between\">\n// //           <span>{item.name} </span>\n// //           <span>₹{Number(item.Price).toFixed(2)}</span>\n// //         </li>\n// //       ))}\n// //     </ul>\n// //     {/* <h6 className=\"text-end\">\n// //       Total: ₹{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2 }).format(\n// //         cart.reduce((acc, item) => acc + Number(item.Price), 0)\n// //       )}\n// //     </h6> */}\n// //     <h6 className=\"text-end\">\n// //   Total: ₹{cart.reduce((acc, item) => acc + Number(item.Price), 0).toFixed(2)}\n// // </h6>\n\n// //   </div>\n// // </div>\n\n// //     </div>\n// //   )}\n// // </div>\n\n// <div className=\"container my-5\">\n//   <h2 className=\"text-center mb-4\">Your Cart</h2>\n\n//   {cart.length === 0 ? (\n//   <div className=\"text-center\">\n//   <p>{orderplaced ? \"Your order is placed.\" : \"Your cart is empty.\"}</p>\n//   <Link\n//     to=\"/past-orders\" \n//     className=\"btn btn-primary mt-2\"\n//     style={{ textDecoration: \"none\" }}\n//   >\n//     View Past Orders\n//   </Link>\n// </div>\n\n// ) : (\n\n//     <div className=\"row\">\n//       {/* Left Column: Cart Items */}\n//       <div className=\"col-md-8\">\n//         {cart.map((item, index) => (\n//           <div key={index} className=\"d-flex mb-4 border rounded p-3 shadow-sm\">\n//             {/* Image */}\n//             <img\n//               src={item.image}\n//               alt={item.name}\n//               className=\"img-fluid rounded\"\n//               style={{ width: '150px', height: '150px', objectFit: 'cover' }}\n//             />\n\n//             {/* Details */}\n//             <div className=\"ms-3 flex-grow-1\">\n//               <h5>{item.name}</h5>\n//               <p className=\"mb-1\">Price: ₹{Number(item.Price).toFixed(2)}</p>\n//               <p className=\"mb-2\">Quantity: {item.quantity}</p>\n\n// <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n//   <button\n//     style={{\n//       width: \"32px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       backgroundColor: \"#fff\",\n//       color: \"#333\",\n//       fontSize: \"18px\",\n//       fontWeight: \"bold\",\n//       borderRadius: \"50%\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       cursor: \"pointer\",\n//     }}\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\n//     onClick={() => handleDecreaseQuantity(index)}\n//   >\n//     −\n//   </button>\n\n//   <div\n//     style={{\n//       width: \"40px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       textAlign: \"center\",\n//       lineHeight: \"30px\",\n//       borderRadius: \"4px\",\n//       fontWeight: \"500\",\n//     }}\n//   >\n//     {item.quantity}\n//   </div>\n\n//   <button\n//     style={{\n//       width: \"32px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       backgroundColor: \"#fff\",\n//       color: \"#333\",\n//       fontSize: \"18px\",\n//       fontWeight: \"bold\",\n//       borderRadius: \"50%\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       cursor: \"pointer\",\n//     }}\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\n//     onClick={() => handleIncreaseQuantity(index)}\n//   >\n//     +\n//   </button>\n\n//   <button\n//     className=\"btn btn-sm btn-danger ms-3\"\n//     onClick={() => handleRemoveItem(index)}\n//   >\n//     Remove\n//   </button>\n// </div>\n\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Right Column: Cart Summary */}\n//       <div className=\"col-md-4 mb-4\">\n//         <div className=\"card p-3 shadow-sm\">\n//           <h5 className=\"mb-3\">Cart Summary</h5>\n//           <ul className=\"list-group mb-3\">\n//             {cart.map((item, index) => (\n//               <li\n//                 key={index}\n//                 className=\"list-group-item d-flex justify-content-between\"\n//               >\n//                 <span>{item.name}</span>\n//                 <span>₹{Number(item.Price).toFixed(2)}</span>\n//               </li>\n//             ))}\n//           </ul>\n\n//           <div className=\"mb-3\">\n//   <label htmlFor=\"deliveryPreference\" className=\"form-label\">\n//     Delivery Preference\n//   </label>\n//   <select\n//     id=\"deliveryPreference\"\n//     className=\"form-select\"\n//     value={deliveryPreference}\n//     onChange={(e) => setDeliveryPreference(e.target.value)}\n//   >\n//     <option value=\"normal\">Normal (Free,7 Days)</option>\n//     <option value=\"Fast\">Fast (Rs.50, 2 Days)</option>\n//   </select>\n// </div>\n// <h6 className=\"text-end\">\n//             Total: ₹\n//             {(parseFloat(totalAmount)+(deliveryPreference===\"Fast\"?50:0)).toFixed(2)}\n//           </h6>\n\n//           <button\n//     style={{\n//       width: \"100%\",\n//       backgroundColor: \"#fb641b\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"2px\",\n//       padding: \"12px 0\",\n//       fontSize: \"16px\",\n//       fontWeight: \"bold\",\n//       boxShadow: \"0 1px 2px 0 rgba(0, 0, 0, 0.2)\",\n//       cursor: \"pointer\",\n//       marginTop: \"16px\"\n//     }}\n//     // onClick={handlePlaceOrder}\n//     onClick={placeOrder}\n//   >\n//     PLACE ORDER\n//   </button>\n//         </div>\n//       </div>\n//     </div>\n//   )}\n// </div>\n\n//   );\n// };\n\n// export default ViewAddtocart;\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n// import \"./Addtocart.css\";\nimport api from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewAddtocart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartcount, setCartcount] = useState(0);\n  const [orderplaced, setOrderPlaced] = useState(false);\n  const [deliveryType, setDeliveryType] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n  const [step, setStep] = useState(0);\n  const navigate = useNavigate();\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\n\n  // Ensure the user is logged in and is not an admin\n  useEffect(() => {\n    const user = localStorage.getItem(\"USER\");\n    const role = localStorage.getItem(\"Role\");\n    if (!user || role === \"admin\") {\n      console.log(\"Role in localStorage:\", role); // Debugging: Check the role\n      alert(\"Access denied! Please login as a valid user.\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n    setCart(storedCart);\n    setCartcount(storedCart.length);\n  }, [email]);\n  console.log;\n\n  // Function to update cart state and localStorage\n  const updateCart = updatedCart => {\n    setCart(updatedCart);\n    setCartcount(updatedCart.length);\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n    localStorage.setItem(\"cartcount\", updatedCart.length);\n    window.dispatchEvent(new Event(\"storage\"));\n  };\n\n  // Function to increase item quantity\n  const handleIncreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => i === index ? {\n      ...item,\n      quantity: item.quantity + 1,\n      Price: (item.Price / item.quantity * (item.quantity + 1)).toFixed(2)\n    } : item);\n    updateCart(updatedCart);\n  };\n  const handleDecreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => {\n      if (i === index) {\n        const newQuantity = item.quantity - 1;\n        if (newQuantity === 0) return null;\n        return {\n          ...item,\n          quantity: newQuantity,\n          Price: (item.unitPrice * newQuantity).toFixed(2)\n        };\n      }\n      return item;\n    }).filter(item => item !== null);\n    updateCart(updatedCart);\n  };\n  // Function to remove item from cart\n  const handleRemoveItem = index => {\n    const updatedCart = cart.filter((_, i) => i !== index);\n    updateCart(updatedCart);\n  };\n\n  // Calculate total amount of the cart\n  const totalAmount = cart.reduce((total, item) => total + parseFloat(item.Price), 0).toFixed(2);\n\n  // Add extra charges for fast delivery\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\n\n  // Handle placing the order\n  const handlePlaceOrder = async () => {\n    const userId = localStorage.getItem(\"USER\");\n    if (!userId || cart.length === 0) {\n      alert(\"Invalid order data. Please log in and add items.\");\n      return;\n    }\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\n      return;\n    }\n    try {\n      const response = await api.post(\"/orders\", {\n        userId,\n        cartItems: cart,\n        totalAmount: totalAmountWithDelivery,\n        pincode,\n        address,\n        city,\n        serviceDate: new Date(),\n        deliveryType,\n        userEmail: email\n      });\n      const orderData = response.data.order; // ✅ FIXED HERE\n\n      if (response.status === 201 && orderData._id) {\n        const options = {\n          key: \"rzp_test_99IwqPHWTFKkXS\",\n          // ✅ Use real Razorpay key in production\n          amount: parseFloat(totalAmountWithDelivery) * 100,\n          // amount in paise\n          currency: \"INR\",\n          name: \"Softwizz\",\n          description: \"Order Payment\",\n          handler: async function (razorpayResponse) {\n            try {\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\n                paymentId: razorpayResponse.razorpay_payment_id,\n                paymentStatus: \"Paid\"\n              });\n              if (paymentRes.status === 200) {\n                alert(\"Payment Successful!\");\n                localStorage.removeItem(`cart_${email}`);\n                localStorage.setItem(\"cartcount\", 0);\n                setCart([]);\n                setCartcount(0);\n                setOrderPlaced(true);\n                window.dispatchEvent(new Event(\"storage\"));\n                navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\n              } else {\n                alert(\"Payment captured but failed to update order.\");\n              }\n            } catch (err) {\n              console.error(\"Payment update failed:\", err);\n              alert(\"Payment succeeded but order update failed.\");\n            }\n          },\n          prefill: {\n            name: address,\n            email: email,\n            contact: \"9999999999\" // Optional\n          },\n          theme: {\n            color: \"#3399cc\"\n          }\n        };\n        const rzp = new window.Razorpay(options);\n        rzp.open();\n      } else {\n        alert(\"Failed to create order. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Order placement error:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addtocart-container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-steps mb-4\",\n      children: [\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card cart-card shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                className: \"card-img-top\",\n                style: {\n                  height: \"180px\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"\\u20B9\", item.Price, \" \\xD7 \", item.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => handleIncreaseQuantity(index),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning btn-sm text-white\",\n                    onClick: () => handleDecreaseQuantity(index),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveItem(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Order Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [cart.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.name, \" \\xD7 \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", item.Price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item fw-bold d-flex justify-content-between border-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", totalAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3 w-100\",\n            disabled: cart.length === 0,\n            onClick: () => setStep(1),\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Delivery Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"City\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Pincode\",\n          value: pincode,\n          onChange: e => setPincode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control my-2\",\n          value: deliveryType,\n          onChange: e => setDeliveryType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Delivery Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fast\",\n            children: \"Fast (\\u20B950, 2 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Slow\",\n            children: \"Normal (Free, 4 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100\",\n          onClick: () => {\n            if (address && city && pincode && deliveryType) {\n              setStep(2);\n            } else {\n              alert(\"Please fill all fields!\");\n            }\n          },\n          children: \"Continue to Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary w-100 mt-2\",\n          onClick: () => setStep(0),\n          children: \"Back to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simulated payment method (Cash/UPI etc)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setStep(3),\n        children: \"Continue to Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-2\",\n        onClick: () => setStep(1),\n        children: \"Back to Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Order Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \\u20B9\", totalAmountWithDelivery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 866,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: handlePlaceOrder,\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 867,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-2\",\n        onClick: () => setStep(2),\n        children: \"Back to Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 707,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewAddtocart, \"4lil7nlaLETM92A/pOim1awq9MI=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewAddtocart;\nexport default ViewAddtocart;\nvar _c;\n$RefreshReg$(_c, \"ViewAddtocart\");","map":{"version":3,"names":["useEffect","useState","useNavigate","api","jsxDEV","_jsxDEV","ViewAddtocart","_s","cart","setCart","cartcount","setCartcount","orderplaced","setOrderPlaced","deliveryType","setDeliveryType","address","setAddress","city","setCity","pincode","setPincode","step","setStep","navigate","email","localStorage","getItem","user","role","console","log","alert","storedCart","JSON","parse","length","updateCart","updatedCart","setItem","stringify","window","dispatchEvent","Event","handleIncreaseQuantity","index","map","item","i","quantity","Price","toFixed","handleDecreaseQuantity","newQuantity","unitPrice","filter","handleRemoveItem","_","totalAmount","reduce","total","parseFloat","extracharge","totalAmountWithDelivery","handlePlaceOrder","userId","trim","response","post","cartItems","serviceDate","Date","userEmail","orderData","data","order","status","_id","options","key","amount","currency","name","description","handler","razorpayResponse","paymentRes","put","paymentId","razorpay_payment_id","paymentStatus","removeItem","err","error","prefill","contact","theme","color","rzp","Razorpay","open","className","children","label","idx","fileName","_jsxFileName","lineNumber","columnNumber","src","image","style","height","objectFit","onClick","disabled","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/components/viewAddtocart.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import axios from \"axios\";\r\n// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const ViewAddtocart = () => {\r\n//     const [items,setItems]=useState([]);\r\n//     const [show, setShow] = useState(false);\r\n//     const [deleteId, setDeleteId] = useState(null);\r\n\r\n\r\n    \r\n//     const fetchData=async()=>{\r\n//         try{\r\n//             const response=await axios.get(\"http://localhost:5001/api/viewaddtocart\");\r\n//             console.log(\"cart data\",response.data);\r\n//             setItems(response.data);\r\n//         }catch(err){\r\n//             console.log(\"error during fetching blogs data\",err);\r\n//         }\r\n//     };\r\n//     useEffect(()=>{\r\n//         fetchData();\r\n//         },[]);\r\n         \r\n        \r\n//     // डिलीट करने के लिए Modal Open करें\r\n//     const handleShow = (id) => {\r\n//         console.log(\"Item to be deleted:\", id);\r\n//         setDeleteId(id);\r\n//         setShow(true);\r\n//     };\r\n\r\n//     // डिलीट कन्फर्म करें\r\n//     const deleteItem = async () => {\r\n//         if (!deleteId) {\r\n//             console.log(\"No item selected for deletion.\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             console.log(\"Deleting item:\", deleteId);\r\n//             await axios.delete(`http://localhost:5001/api/deleteitem/${deleteId}`);\r\n\r\n//             // डिलीट होने के बाद UI अपडेट करें\r\n//             setItems(items.filter((item) => item._id !== deleteId));\r\n//             setShow(false); // Modal बंद करें\r\n//         } catch (err) {\r\n//             console.log(\"Error deleting item:\", err);\r\n//         }\r\n//     };\r\n\r\n\r\n//   return (\r\n//     <div className=\"container my-5\">\r\n//     <h2 className=\"text-center mb-4\">Cart items</h2>\r\n//     <div className=\"row\">\r\n//         {items.map((item) => (\r\n//             <div key={item._id} className=\"col-md-4 mb-4\">\r\n//                 <div className=\"card h-100\">\r\n//                     <img src={item.smallsubcategoryimage}  className=\"card-img-top p-5\" style={{ height: \"250px\", width: \"100%\", objectFit: \"cover\" }}  />\r\n//                     <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">{item.subcategoryname}</h5>\r\n\r\n\r\n//                         <h5 className=\"card-title\">{item.smallsubcategoryname}</h5>\r\n//                         <h5 className=\"card-text\">{item.Price}</h5>\r\n//                         <div className=\"mb-0 d-flex  \">\r\n//                             {/* <Link to={`/blogdetail/${item._id}`} className=\"btn btn-primary btn-sm\">\r\n                            \r\n//                                 Read More\r\n//                             </Link> */}\r\n//                             <button className=\"btn btn-danger btn-sm\" onClick={() => handleShow(item._id)}>\r\n//                                 Remove\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         ))}\r\n//     </div>\r\n//     {/* Delete Confirmation Modal */}\r\n//     <Modal show={show} onHide={() => setShow(false)}>\r\n//                 <Modal.Header closeButton>\r\n//                     <Modal.Title>Confirm Delete</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>Are you sure you want to delete this item?</Modal.Body>\r\n//                 <Modal.Footer>\r\n//                     <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n//                         Cancel\r\n//                     </Button>\r\n//                     <Button variant=\"danger\" onClick={deleteItem}>\r\n//                         Delete\r\n//                     </Button>\r\n//                 </Modal.Footer>\r\n//             </Modal>\r\n        \r\n// </div>\r\n\r\n//   )\r\n// }\r\n\r\n\r\n// export default ViewAddtocart;\r\n\r\n\r\n\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link,useNavigate } from \"react-router-dom\";\r\n\r\n// const ViewAddtocart = () => {\r\n//   const [cart, setCart] = useState([]);\r\n//   const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\r\n//   const [orderplaced,setorderplaced]=useState(false);\r\n//   const [deliveryPreference, setDeliveryPreference] = useState(\"normal\");\r\n//   const navigate = useNavigate();\r\n\r\n\r\n\r\n//   // useEffect(() => {\r\n//   //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n//   //   setCart(storedCart);\r\n//   // }, []);\r\n\r\n//   // const updateCart = (updatedCart) => {\r\n//   //   setCart(updatedCart);\r\n//   //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n//   // };\r\n\r\n//   // replace\r\n//   const email = localStorage.getItem(\"Email\") || \"guest\";\r\n\r\n  \r\n\r\n// useEffect(() => {\r\n//   const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n//   setCart(storedCart);\r\n// }, [email]);\r\n\r\n// const updateCart = (updatedCart) => {\r\n//   setCart(updatedCart);\r\n//   localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n//   localStorage.setItem(\"cartcount\", updatedCart.length);\r\n//   window.dispatchEvent(new Event(\"storage\"));\r\n// };\r\n\r\n\r\n//   const handleIncreaseQuantity = (index) => {\r\n//     const updatedCart = cart.map((item, i) =>\r\n//       i === index\r\n//         ? { ...item, quantity: item.quantity + 1, Price: (item.quantity + 1) * (item.Price / item.quantity) }\r\n//         : item\r\n//     );\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n\r\n\r\n\r\n// const handleDecreaseQuantity = (index) => {\r\n//     const updatedCart = cart\r\n//       .map((item, i) => {\r\n//         if (i === index) {\r\n//           const newQuantity = item.quantity - 1;\r\n//           if (newQuantity === 0) return null; // Mark for removal\r\n//           return { \r\n//             ...item, \r\n//             quantity: newQuantity, \r\n//             Price: (newQuantity * (item.Price / item.quantity)).toFixed(2) \r\n//           };\r\n//         }\r\n//         return item;\r\n//       })\r\n//       .filter(item => item !== null); // Remove items marked as null\r\n  \r\n//     updateCart(updatedCart);\r\n\r\n//     const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\r\n//     setcartcount(newCartCount);\r\n\r\n//     // Store updated cart and cart count in localStorage\r\n//     localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n//     localStorage.setItem(\"cartcount\", newCartCount);\r\n\r\n//     window.dispatchEvent(new Event(\"storage\"));\r\n\r\n//   };\r\n  \r\n//   const handleRemoveItem = (index) => {\r\n//     const updatedCart = cart.filter((_, i) => i !== index);\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   const handlePlaceOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n  \r\n//     if (!userId || cart.length === 0) {\r\n//       alert(\"Invalid order data. Please log in and add items.\");\r\n//       return;\r\n//     }\r\n//     const extracharge=deliveryPreference===\"Fast\"? 50 :0;\r\n//     const finalAmount=parseFloat(totalAmount)+extracharge;\r\n    \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5001/api/orderplaced\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           userId,\r\n//           cartItems: cart,\r\n//           totalAmount:finalAmount,\r\n//           deliveryPreference, // <== ADD THIS LINE\r\n//           userEmail:localStorage.getItem(\"Email\"),\r\n//         }),\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n  \r\n//       if (response.status === 201) {\r\n//         alert(data.message);\r\n//         // Reset cart\r\n//         localStorage.removeItem(`cart_${email}`);\r\n//         localStorage.setItem(\"cartcount\", 0);\r\n//         setCart([]);\r\n//         setcartcount(0);\r\n//         setorderplaced(true);\r\n//         window.dispatchEvent(new Event(\"storage\"));\r\n//       } else {\r\n//         alert(data.message || \"Order not placed\");\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"Something went wrong. Please try again.\");\r\n//       console.error(\"Order placement error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const placeOrder = async () => {\r\n//   //   const userId = localStorage.getItem(\"USER\");\r\n//   //   navigate(`/Checkout/${userId}`);\r\n   \r\n//   // };\r\n//   const placeOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n//     navigate(`/Checkout/${userId}`, {\r\n//       state: {\r\n//         deliveryPreference,\r\n//         totalAmount: parseFloat(totalAmount),\r\n//         finalAmount: parseFloat(totalAmount) + (deliveryPreference === \"Fast\" ? 50 : 0)\r\n//       }\r\n//     });\r\n//   };\r\n  \r\n\r\n//   const totalAmount= cart\r\n//   .reduce((acc, item) => acc + Number(item.Price), 0)\r\n//   .toFixed(2);\r\n\r\n//   return (\r\n//     // <div className=\"container my-5\">\r\n//     //   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n//     //   {cart.length === 0 ? (\r\n//     //     <p className=\"text-center\">Your cart is empty.</p>\r\n//     //   ) : (\r\n//     //     <div className=\"row\">\r\n//     //       {cart.map((item, index) => (\r\n//     //         <div key={index} className=\"col-md-4 mb-4\">\r\n//     //           <div className=\"card\">\r\n//     //             <img src={item.image} className=\"card-img-top\" alt={item.name} />\r\n//     //             <div className=\"card-body\">\r\n//     //               <h5>{item.name}</h5>\r\n//     //               <p>Price: ₹{item.Price}</p>\r\n//     //               <p>Quantity: {item.quantity}</p>\r\n                  \r\n//     //               <div className=\"d-flex justify-content-between\">\r\n//     //                 <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\r\n//     //                 <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\r\n//     //                 <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\r\n//     //               </div>\r\n//     //             </div>\r\n//     //           </div>\r\n//     //         </div>\r\n//     //       ))}\r\n          \r\n//     //     </div>\r\n        \r\n//     //   )}\r\n//     // </div>\r\n\r\n// //     <div className=\"container my-5\">\r\n// //   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n// //   {cart.length === 0 ? (\r\n// //     <p className=\"text-center\">Your cart is empty.</p>\r\n// //   ) : (\r\n// //     <div className=\"row\">\r\n      \r\n\r\n// //       {/* t Column: Cart Items */}\r\n// //       <div className=\"col-md-8\">\r\n// //         <div className=\"row\">\r\n// //           {cart.map((item, index) => (\r\n// //             <div key={index} className=\"col-md-6 mb-4\">\r\n// //               <div className=\"card\">\r\n// //                 <img src={item.image} className=\"card-img-top\" alt={item.name} />\r\n// //                 <div className=\"card-body\">\r\n// //                   <h5>{item.name}</h5>\r\n// //                   <p>Price: ₹{item.Price}</p>\r\n// //                   <p>Quantity: {item.quantity}</p>\r\n\r\n// //                   <div className=\"d-flex justify-content-between\">\r\n// //                     <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\r\n// //                     <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\r\n// //                     <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\r\n// //                   </div>\r\n// //                 </div>\r\n// //               </div>\r\n// //             </div>\r\n// //           ))}\r\n// //         </div>\r\n// //       </div>\r\n\r\n// //       {/* right Column: Cart Summary */}\r\n      \r\n// // <div className=\"col-md-4 mb-4\">\r\n// //   <div className=\"card p-3\">\r\n// //     <h5 className=\"mb-3\">Cart Summary</h5>\r\n// //     <ul className=\"list-group mb-3\">\r\n// //       {cart.map((item, index) => (\r\n// //         <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n// //           <span>{item.name} </span>\r\n// //           <span>₹{Number(item.Price).toFixed(2)}</span>\r\n// //         </li>\r\n// //       ))}\r\n// //     </ul>\r\n// //     {/* <h6 className=\"text-end\">\r\n// //       Total: ₹{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2 }).format(\r\n// //         cart.reduce((acc, item) => acc + Number(item.Price), 0)\r\n// //       )}\r\n// //     </h6> */}\r\n// //     <h6 className=\"text-end\">\r\n// //   Total: ₹{cart.reduce((acc, item) => acc + Number(item.Price), 0).toFixed(2)}\r\n// // </h6>\r\n\r\n// //   </div>\r\n// // </div>\r\n\r\n// //     </div>\r\n// //   )}\r\n// // </div>\r\n\r\n// <div className=\"container my-5\">\r\n//   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n\r\n//   {cart.length === 0 ? (\r\n//   <div className=\"text-center\">\r\n//   <p>{orderplaced ? \"Your order is placed.\" : \"Your cart is empty.\"}</p>\r\n//   <Link\r\n//     to=\"/past-orders\" \r\n//     className=\"btn btn-primary mt-2\"\r\n//     style={{ textDecoration: \"none\" }}\r\n//   >\r\n//     View Past Orders\r\n//   </Link>\r\n// </div>\r\n\r\n  \r\n// ) : (\r\n\r\n//     <div className=\"row\">\r\n//       {/* Left Column: Cart Items */}\r\n//       <div className=\"col-md-8\">\r\n//         {cart.map((item, index) => (\r\n//           <div key={index} className=\"d-flex mb-4 border rounded p-3 shadow-sm\">\r\n//             {/* Image */}\r\n//             <img\r\n//               src={item.image}\r\n//               alt={item.name}\r\n//               className=\"img-fluid rounded\"\r\n//               style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n//             />\r\n\r\n//             {/* Details */}\r\n//             <div className=\"ms-3 flex-grow-1\">\r\n//               <h5>{item.name}</h5>\r\n//               <p className=\"mb-1\">Price: ₹{Number(item.Price).toFixed(2)}</p>\r\n//               <p className=\"mb-2\">Quantity: {item.quantity}</p>\r\n\r\n             \r\n\r\n// <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\r\n//   <button\r\n//     style={{\r\n//       width: \"32px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       backgroundColor: \"#fff\",\r\n//       color: \"#333\",\r\n//       fontSize: \"18px\",\r\n//       fontWeight: \"bold\",\r\n//       borderRadius: \"50%\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       cursor: \"pointer\",\r\n//     }}\r\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\r\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\r\n//     onClick={() => handleDecreaseQuantity(index)}\r\n//   >\r\n//     −\r\n//   </button>\r\n\r\n//   <div\r\n//     style={{\r\n//       width: \"40px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       textAlign: \"center\",\r\n//       lineHeight: \"30px\",\r\n//       borderRadius: \"4px\",\r\n//       fontWeight: \"500\",\r\n//     }}\r\n//   >\r\n//     {item.quantity}\r\n//   </div>\r\n\r\n//   <button\r\n//     style={{\r\n//       width: \"32px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       backgroundColor: \"#fff\",\r\n//       color: \"#333\",\r\n//       fontSize: \"18px\",\r\n//       fontWeight: \"bold\",\r\n//       borderRadius: \"50%\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       cursor: \"pointer\",\r\n//     }}\r\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\r\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\r\n//     onClick={() => handleIncreaseQuantity(index)}\r\n//   >\r\n//     +\r\n//   </button>\r\n\r\n//   <button\r\n//     className=\"btn btn-sm btn-danger ms-3\"\r\n//     onClick={() => handleRemoveItem(index)}\r\n//   >\r\n//     Remove\r\n//   </button>\r\n// </div>\r\n\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Right Column: Cart Summary */}\r\n//       <div className=\"col-md-4 mb-4\">\r\n//         <div className=\"card p-3 shadow-sm\">\r\n//           <h5 className=\"mb-3\">Cart Summary</h5>\r\n//           <ul className=\"list-group mb-3\">\r\n//             {cart.map((item, index) => (\r\n//               <li\r\n//                 key={index}\r\n//                 className=\"list-group-item d-flex justify-content-between\"\r\n//               >\r\n//                 <span>{item.name}</span>\r\n//                 <span>₹{Number(item.Price).toFixed(2)}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n          \r\n\r\n//           <div className=\"mb-3\">\r\n//   <label htmlFor=\"deliveryPreference\" className=\"form-label\">\r\n//     Delivery Preference\r\n//   </label>\r\n//   <select\r\n//     id=\"deliveryPreference\"\r\n//     className=\"form-select\"\r\n//     value={deliveryPreference}\r\n//     onChange={(e) => setDeliveryPreference(e.target.value)}\r\n//   >\r\n//     <option value=\"normal\">Normal (Free,7 Days)</option>\r\n//     <option value=\"Fast\">Fast (Rs.50, 2 Days)</option>\r\n//   </select>\r\n// </div>\r\n// <h6 className=\"text-end\">\r\n//             Total: ₹\r\n//             {(parseFloat(totalAmount)+(deliveryPreference===\"Fast\"?50:0)).toFixed(2)}\r\n//           </h6>\r\n\r\n//           <button\r\n//     style={{\r\n//       width: \"100%\",\r\n//       backgroundColor: \"#fb641b\",\r\n//       color: \"#fff\",\r\n//       border: \"none\",\r\n//       borderRadius: \"2px\",\r\n//       padding: \"12px 0\",\r\n//       fontSize: \"16px\",\r\n//       fontWeight: \"bold\",\r\n//       boxShadow: \"0 1px 2px 0 rgba(0, 0, 0, 0.2)\",\r\n//       cursor: \"pointer\",\r\n//       marginTop: \"16px\"\r\n//     }}\r\n//     // onClick={handlePlaceOrder}\r\n//     onClick={placeOrder}\r\n//   >\r\n//     PLACE ORDER\r\n//   </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n\r\n//   );\r\n// };\r\n\r\n// export default ViewAddtocart;\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import \"./Addtocart.css\";\r\nimport api from \"../axios\";\r\n\r\nconst ViewAddtocart = () => {\r\n  \r\n  const [cart, setCart] = useState([]);\r\n  const [cartcount, setCartcount] = useState(0);\r\n  const [orderplaced, setOrderPlaced] = useState(false);\r\n  const [deliveryType, setDeliveryType] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [step, setStep] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\r\n\r\n  // Ensure the user is logged in and is not an admin\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"USER\");\r\n    const role = localStorage.getItem(\"Role\");\r\n\r\n    if (!user || role === \"admin\") {\r\n      console.log(\"Role in localStorage:\", role);  // Debugging: Check the role\r\n      alert(\"Access denied! Please login as a valid user.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Load cart from localStorage on initial render\r\n  useEffect(() => {\r\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n    setCart(storedCart);\r\n    setCartcount(storedCart.length);\r\n  }, [email]);\r\n  console.log\r\n\r\n  // Function to update cart state and localStorage\r\n  const updateCart = (updatedCart) => {\r\n    setCart(updatedCart);\r\n    setCartcount(updatedCart.length);\r\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n    localStorage.setItem(\"cartcount\", updatedCart.length);\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n  };\r\n\r\n  // Function to increase item quantity\r\n  const handleIncreaseQuantity = (index) => {\r\n    const updatedCart = cart.map((item, i) =>\r\n      i === index\r\n        ? {\r\n            ...item,\r\n            quantity: item.quantity + 1,\r\n            Price: ((item.Price / item.quantity) * (item.quantity + 1)).toFixed(2),\r\n          }\r\n        : item\r\n    );\r\n    updateCart(updatedCart);\r\n  };\r\n    \r\n  const handleDecreaseQuantity = (index) => {\r\n    const updatedCart = cart\r\n      .map((item, i) => {\r\n        if (i === index) {\r\n          const newQuantity = item.quantity - 1;\r\n          if (newQuantity === 0) return null;\r\n          return {\r\n            ...item,\r\n            quantity: newQuantity,\r\n            Price: (item.unitPrice * newQuantity).toFixed(2),\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n      .filter((item) => item !== null);\r\n    updateCart(updatedCart);\r\n  };\r\n    // Function to remove item from cart\r\n  const handleRemoveItem = (index) => {\r\n    const updatedCart = cart.filter((_, i) => i !== index);\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  // Calculate total amount of the cart\r\n  const totalAmount = cart\r\n    .reduce((total, item) => total + parseFloat(item.Price), 0)\r\n    .toFixed(2);\r\n\r\n  // Add extra charges for fast delivery\r\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\r\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\r\n\r\n  // Handle placing the order\r\n  const handlePlaceOrder = async () => {\r\n    const userId = localStorage.getItem(\"USER\");\r\n  \r\n    if (!userId || cart.length === 0) {\r\n      alert(\"Invalid order data. Please log in and add items.\");\r\n      return;\r\n    }\r\n  \r\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\r\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await api.post(\"/orders\", {\r\n        userId,\r\n        cartItems: cart,\r\n        totalAmount: totalAmountWithDelivery,\r\n        pincode,\r\n        address,\r\n        city,\r\n        serviceDate: new Date(),\r\n        deliveryType,\r\n        userEmail: email,\r\n      });\r\n  \r\n      const orderData = response.data.order; // ✅ FIXED HERE\r\n  \r\n      if (response.status === 201 && orderData._id) {\r\n        const options = {\r\n          key: \"rzp_test_99IwqPHWTFKkXS\", // ✅ Use real Razorpay key in production\r\n          amount: parseFloat(totalAmountWithDelivery) * 100, // amount in paise\r\n          currency: \"INR\",\r\n          name: \"Softwizz\",\r\n          description: \"Order Payment\",\r\n          handler: async function (razorpayResponse) {\r\n            try {\r\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\r\n                paymentId: razorpayResponse.razorpay_payment_id,\r\n                paymentStatus: \"Paid\",\r\n              });\r\n  \r\n              if (paymentRes.status === 200) {\r\n                alert(\"Payment Successful!\");\r\n                localStorage.removeItem(`cart_${email}`);\r\n                localStorage.setItem(\"cartcount\", 0);\r\n                setCart([]);\r\n                setCartcount(0);\r\n                setOrderPlaced(true);\r\n                window.dispatchEvent(new Event(\"storage\"));\r\n                navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\r\n              } else {\r\n                alert(\"Payment captured but failed to update order.\");\r\n              }\r\n            } catch (err) {\r\n              console.error(\"Payment update failed:\", err);\r\n              alert(\"Payment succeeded but order update failed.\");\r\n            }\r\n          },\r\n          prefill: {\r\n            name: address,\r\n            email: email,\r\n            contact: \"9999999999\", // Optional\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\",\r\n          },\r\n        };\r\n  \r\n        const rzp = new window.Razorpay(options);\r\n        rzp.open();\r\n      } else {\r\n        alert(\"Failed to create order. Try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Order placement error:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n      return (\r\n    <div className=\"addtocart-container py-5\">\r\n      {/* Step Indicators */}\r\n      <div className=\"checkout-steps mb-4\">\r\n        {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\r\n          >\r\n            <div className=\"step-circle\">{idx + 1}</div>\r\n            <div className=\"step-label\">{label}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Step 0 - Cart */}\r\n      {step === 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h4>Your Cart</h4>\r\n            <div className=\"row\">\r\n              {cart.map((item, index) => (\r\n                <div key={index} className=\"col-md-6 mb-4\">\r\n                  <div className=\"card cart-card shadow-sm\">\r\n                    <img\r\n                      src={item.image}\r\n                      className=\"card-img-top\"\r\n                      style={{ height: \"180px\", objectFit: \"cover\" }}\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">{item.name}</h5>\r\n                      <p className=\"card-text\">\r\n                        ₹{item.Price} × {item.quantity}\r\n                      </p>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <button\r\n                          className=\"btn btn-success btn-sm\"\r\n                          onClick={() => handleIncreaseQuantity(index)}\r\n                        >\r\n                          +\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-warning btn-sm text-white\"\r\n                          onClick={() => handleDecreaseQuantity(index)}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={() => handleRemoveItem(index)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card p-3\">\r\n              <h5>Order Summary</h5>\r\n              <ul className=\"list-group list-group-flush\">\r\n                {cart.map((item, idx) => (\r\n                  <li key={idx} className=\"list-group-item d-flex justify-content-between\">\r\n                    <span>{item.name} × {item.quantity}</span>\r\n                    <span>₹{item.Price}</span>\r\n                  </li>\r\n                ))}\r\n                <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\r\n                  <span>Total</span>\r\n                  <span>₹{totalAmount}</span>\r\n                </li>\r\n              </ul>\r\n              <button\r\n                className=\"btn btn-primary mt-3 w-100\"\r\n                disabled={cart.length === 0}\r\n                onClick={() => setStep(1)}\r\n              >\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 1 - Address */}\r\n      {step === 1 && (\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <h4>Delivery Address</h4>\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"Pincode\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.target.value)}\r\n            />\r\n            <select\r\n              className=\"form-control my-2\"\r\n              value={deliveryType}\r\n              onChange={(e) => setDeliveryType(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Delivery Type</option>\r\n              <option value=\"Fast\">Fast (₹50, 2 Days)</option>\r\n              <option value=\"Slow\">Normal (Free, 4 Days)</option>\r\n            </select>\r\n\r\n            <button\r\n              className=\"btn btn-primary w-100\"\r\n              onClick={() => {\r\n                if (address && city && pincode && deliveryType) {\r\n                  setStep(2);\r\n                } else {\r\n                  alert(\"Please fill all fields!\");\r\n                }\r\n              }}\r\n            >\r\n              Continue to Payment\r\n            </button>\r\n\r\n            <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\r\n              Back to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 2 - Payment */}\r\n      {step === 2 && (\r\n        <div className=\"text-center\">\r\n          <h4>Payment</h4>\r\n          <p>Simulated payment method (Cash/UPI etc)</p>\r\n          <button className=\"btn btn-dark\" onClick={() => setStep(3)}>\r\n            Continue to Summary\r\n          </button>\r\n          <br />\r\n          <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\r\n            Back to Address\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 3 - Summary */}\r\n      {step === 3 && (\r\n        <div className=\"text-center\">\r\n          <h4>Order Summary</h4>\r\n          <p>Total: ₹{totalAmountWithDelivery}</p>\r\n          <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\r\n            Place Order\r\n          </button>\r\n          <br />\r\n          <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\r\n            Back to Payment\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAddtocart;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C;AACA,OAAOC,GAAG,MAAM,UAAU;AAAC,SAAAC,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}