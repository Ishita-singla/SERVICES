{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n\n// const Profile = () => {\n//   const [photoPath, setPhotoPath] = useState(\"\");\n//   const [Email, setEmail] = useState(\"\");\n\n//   // üîπ Default Profile Image\n//   const defaultPhoto = \"https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_640.png\";\n\n//   // üîπ Page reload hone pe localStorage se email aur photo fetch karega\n//   useEffect(() => {\n//     const savedEmail = localStorage.getItem(\"Email\");\n//     console.log(\"saved email\"+savedEmail);\n//     if (savedEmail) {\n//       setEmail(savedEmail);\n//       fetchUserPhoto(savedEmail);\n//     }\n//   }, []);\n\n//   // üîπ API Call to get user photo from Database\n\n//   const fetchUserPhoto = async (Email) => {\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/getuserphoto\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ Email: Email }),\n//       });\n\n//       const data = await response.json();\n//       console.log(data);\n//       if (response.ok) {\n//         setPhotoPath(data.Photo || defaultPhoto);  // ‚úÖ ‡§Ö‡§ó‡§∞ `null` ‡§Ü‡§Ø‡§æ ‡§§‡•ã default photo ‡§¶‡§ø‡§ñ‡§æ‡§è‡§ó‡§æ\n//         localStorage.setItem(\"Photo\", data.Photo || defaultPhoto);\n//       } else {\n//         console.error(\"User not found\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching user photo:\", error);\n//     }\n//   };\n\n//   // üîπ Image Upload Function (Cloudinary)\n\n//   const uploadPicture = async (imagefile) => {\n//     if (!imagefile) return;\n\n//     const data = new FormData();\n//     data.append(\"file\", imagefile);\n//     data.append(\"upload_preset\", \"person\");\n//     data.append(\"cloud_name\", \"ddhm29flq\");\n\n//     try {\n//       const res = await fetch(\"https://api.cloudinary.com/v1_1/ddhm29flq/image/upload\", {\n//         method: \"POST\",\n//         body: data,\n//       });\n\n//       const result = await res.json();\n//       console.log(\"Cloudinary Response:\", result);\n//       setPhotoPath(result.url);\n//       localStorage.setItem(\"Photo\", result.url);\n\n//       // ‚úÖ ‡§Ö‡§¨ database ‡§Æ‡•á‡§Ç ‡§≠‡•Ä save ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á\n//       await fetch(\"http://localhost:5000/api/uploadimage\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ Email, Photo: result.url }),\n//       });\n//       console.log(\"Sending to Backend:\", { Email, Photo: result.url });\n\n//     } catch (err) {\n//       console.error(\"Upload Error:\", err);\n//     }\n//   };\n\n//   // üîπ Submit Function (Save Image URL in Database)\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/uploadimage\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ Email: Email, Photo: photoPath }),\n//       });\n\n//       // if (response.status === 403) {\n//       //   alert(\"‚ùå You are not registered. Please login first.\");\n//       // } \n\n//       if (response.ok) {\n//         const data = await response.json();\n//         console.log(\"Backend Response:\", data); // ‚úÖ Yeh check karein ki response aa raha hai ya nahi\n//         setPhotoPath(data.Photo);\n//         alert(\"‚úÖ Profile pic updated!\");\n\n//       } else {\n//         alert(\"‚ùå Error in Uploading\");\n//       }\n//     } catch (err) {\n//       console.error(\"Error:\", err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"row col-lg-12 d-flex justify-content-center align-items-center text-center\">\n//       <div className=\"card text-center\">\n//         <form className=\"upload picture\" onSubmit={handleSubmit}>\n//           <div>\n//             <img\n//               src={photoPath || defaultPhoto} // Default Image if No Photo Found\n//               className=\"card-img-top rounded-circle border mb-3\"\n//               alt=\"Profile\"\n//               style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\n//             />\n//           </div>\n//           <input\n//             type=\"file\"\n//             onChange={(e) => uploadPicture(e.target.files[0])}\n//           />\n//           <div className=\"card-body\">\n//             <h5 className=\"card-title\">{Email}</h5>\n//             <button type=\"submit\">Submit</button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;","map":{"version":3,"names":[],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/User/Profile.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n\r\n// const Profile = () => {\r\n//   const [photoPath, setPhotoPath] = useState(\"\");\r\n//   const [Email, setEmail] = useState(\"\");\r\n\r\n//   // üîπ Default Profile Image\r\n//   const defaultPhoto = \"https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_640.png\";\r\n\r\n//   // üîπ Page reload hone pe localStorage se email aur photo fetch karega\r\n//   useEffect(() => {\r\n//     const savedEmail = localStorage.getItem(\"Email\");\r\n//     console.log(\"saved email\"+savedEmail);\r\n//     if (savedEmail) {\r\n//       setEmail(savedEmail);\r\n//       fetchUserPhoto(savedEmail);\r\n//     }\r\n//   }, []);\r\n\r\n//   // üîπ API Call to get user photo from Database\r\n  \r\n//   const fetchUserPhoto = async (Email) => {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/getuserphoto\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ Email: Email }),\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n//       console.log(data);\r\n//       if (response.ok) {\r\n//         setPhotoPath(data.Photo || defaultPhoto);  // ‚úÖ ‡§Ö‡§ó‡§∞ `null` ‡§Ü‡§Ø‡§æ ‡§§‡•ã default photo ‡§¶‡§ø‡§ñ‡§æ‡§è‡§ó‡§æ\r\n//         localStorage.setItem(\"Photo\", data.Photo || defaultPhoto);\r\n//       } else {\r\n//         console.error(\"User not found\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching user photo:\", error);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // üîπ Image Upload Function (Cloudinary)\r\n\r\n//   const uploadPicture = async (imagefile) => {\r\n//     if (!imagefile) return;\r\n  \r\n//     const data = new FormData();\r\n//     data.append(\"file\", imagefile);\r\n//     data.append(\"upload_preset\", \"person\");\r\n//     data.append(\"cloud_name\", \"ddhm29flq\");\r\n  \r\n//     try {\r\n//       const res = await fetch(\"https://api.cloudinary.com/v1_1/ddhm29flq/image/upload\", {\r\n//         method: \"POST\",\r\n//         body: data,\r\n//       });\r\n  \r\n//       const result = await res.json();\r\n//       console.log(\"Cloudinary Response:\", result);\r\n//       setPhotoPath(result.url);\r\n//       localStorage.setItem(\"Photo\", result.url);\r\n  \r\n//       // ‚úÖ ‡§Ö‡§¨ database ‡§Æ‡•á‡§Ç ‡§≠‡•Ä save ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á\r\n//       await fetch(\"http://localhost:5000/api/uploadimage\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ Email, Photo: result.url }),\r\n//       });\r\n//       console.log(\"Sending to Backend:\", { Email, Photo: result.url });\r\n\r\n  \r\n//     } catch (err) {\r\n//       console.error(\"Upload Error:\", err);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   // üîπ Submit Function (Save Image URL in Database)\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/uploadimage\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ Email: Email, Photo: photoPath }),\r\n//       });\r\n  \r\n//       // if (response.status === 403) {\r\n//       //   alert(\"‚ùå You are not registered. Please login first.\");\r\n//       // } \r\n      \r\n     \r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         console.log(\"Backend Response:\", data); // ‚úÖ Yeh check karein ki response aa raha hai ya nahi\r\n//         setPhotoPath(data.Photo);\r\n//         alert(\"‚úÖ Profile pic updated!\");\r\n         \r\n//       } else {\r\n//         alert(\"‚ùå Error in Uploading\");\r\n//       }\r\n//     } catch (err) {\r\n//       console.error(\"Error:\", err);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"row col-lg-12 d-flex justify-content-center align-items-center text-center\">\r\n//       <div className=\"card text-center\">\r\n//         <form className=\"upload picture\" onSubmit={handleSubmit}>\r\n//           <div>\r\n//             <img\r\n//               src={photoPath || defaultPhoto} // Default Image if No Photo Found\r\n//               className=\"card-img-top rounded-circle border mb-3\"\r\n//               alt=\"Profile\"\r\n//               style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n//             />\r\n//           </div>\r\n//           <input\r\n//             type=\"file\"\r\n//             onChange={(e) => uploadPicture(e.target.files[0])}\r\n//           />\r\n//           <div className=\"card-body\">\r\n//             <h5 className=\"card-title\">{Email}</h5>\r\n//             <button type=\"submit\">Submit</button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}