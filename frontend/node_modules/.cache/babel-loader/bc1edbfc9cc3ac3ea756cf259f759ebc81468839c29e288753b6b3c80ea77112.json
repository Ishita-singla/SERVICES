{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\components\\\\ViewSmallSubCategoryinFront.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewSmallsubCategoryinFront = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    categoryname,\n    subcategoryname\n  } = useParams();\n  const [smallsubcategories, setSmallSubcategories] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\n\n  // const userId = localStorage.getItem(\"USER\") || \"guest\"; // User ID from localStorage or default to 'guest'\n\n  // useEffect(() => {\n  //   // Fetch data for small subcategories based on categoryname and subcategoryname\n  //   const fetchData = async () => {\n  //     try {\n  //       const response = await axios.get(`http://localhost:5000/api/getsubsmallcategory/${categoryname}/${subcategoryname}`);\n  //       setSmallSubcategories(response.data);\n  //     } catch (error) {\n  //       console.error(\"Error fetching data:\", error);\n  //     }\n  //   };\n\n  //   fetchData();\n\n  //   // Load cart from localStorage\n\n  //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n  //   const storedCartCount = localStorage.getItem(\"cartcount\") || 0;\n\n  //   setCart(storedCart);\n  //   setcartcount(Number(storedCartCount));  // Ensure cartcount is a number\n  // }, [categoryname, subcategoryname]);\n\n  // const handleAddToCart = (item) => {\n  //   const existingItemIndex = cart.findIndex(\n  //     (cartItem) => cartItem.productId === item._id && cartItem.userId === userId && cartItem.status === \"pending\"\n  //   );\n\n  //   let updatedCart;\n  //   if (existingItemIndex !== -1) {\n  //     // If item already exists, update quantity and price\n  //     updatedCart = cart.map((cartItem, index) =>\n  //       index === existingItemIndex\n  //         ? {\n  //             ...cartItem,\n  //             quantity: cartItem.quantity + 1,\n  //             Price: (cartItem.quantity + 1) * item.Price, // Price update\n  //           }\n  //         : cartItem\n  //     );\n  //   } else {\n  //     // Add a new item to the cart\n  //     updatedCart = [\n  //       ...cart,\n  //       {\n  //         productId: item._id,\n  //         userId: userId,\n  //         name: item.smallsubcategoryname,\n  //         image: item.smallsubcategoryimage,\n  //         Price: item.Price,\n  //         quantity: 1,\n  //         status: \"pending\",\n  //       },\n  //     ];\n  //   }\n\n  //   // Update the cart and cart count state\n  //   setCart(updatedCart);\n  //   const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\n  //   setcartcount(newCartCount);\n\n  //   // Store updated cart and cart count in localStorage\n\n  //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n  //   localStorage.setItem(\"cartcount\", newCartCount);\n\n  //   // Display success alert\n  //   alert(\"Item added to cart!\");\n  //   console.log(newCartCount);\n\n  //   // Dispatch event to notify storage change\n  //   window.dispatchEvent(new Event(\"storage\"));\n\n  //   // Navigate to the add to cart page\n  //   navigate(\"/viewaddtocart\");\n  // };\n\n  // replace\n  // Add near top \n  const email = localStorage.getItem(\"Email\") || \"guest\";\n  useEffect(() => {\n    // Fetch small subcategories\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/getsubsmallcategory/${categoryname}/${subcategoryname}`);\n        setSmallSubcategories(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n\n    // Load cart for this user\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || []; //particular user ka data nikana\n    setCart(storedCart);\n    setcartcount(storedCart.length);\n  }, [categoryname, subcategoryname, email]);\n  const handleAddToCart = item => {\n    if (email) {\n      console.log();\n    }\n    const existingItemIndex = cart.findIndex(cartItem => cartItem.productId === item._id && cartItem.status === \"pending\");\n    let updatedCart;\n    if (existingItemIndex !== -1) {\n      updatedCart = cart.map((cartItem, index) => index === existingItemIndex ? {\n        ...cartItem,\n        //pehle waale item ki saari properties copy kar lo (spread operator)\n        quantity: cartItem.quantity + 1,\n        Price: (cartItem.quantity + 1) * item.Price\n      } : cartItem //agar nahi (false), to purana item waise ka waise hi le lo\n      );\n    } else {\n      updatedCart = [...cart, {\n        productId: item._id,\n        userId: email,\n        name: item.smallsubcategoryname,\n        image: item.smallsubcategoryimage,\n        Price: item.Price,\n        quantity: 1,\n        status: \"pending\"\n      }];\n    }\n    setCart(updatedCart);\n    setcartcount(updatedCart.length);\n\n    // Save to localStorage using email\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n    localStorage.setItem(\"cartcount\", updatedCart.length);\n    window.dispatchEvent(new Event(\"storage\"));\n    alert(\"Item added to cart!\");\n    navigate(\"/viewaddtocart\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: [subcategoryname, \" Products\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: smallsubcategories.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.smallsubcategoryimage,\n            className: \"card-img-top\",\n            alt: item.smallsubcategoryname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: item.smallsubcategoryname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Price: \\u20B9\", item.Price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100\",\n              onClick: () => handleAddToCart(item),\n              children: \"Add to Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewSmallsubCategoryinFront, \"gS/DNhi7v82/CAU15c+1cnwC53A=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ViewSmallsubCategoryinFront;\nexport default ViewSmallsubCategoryinFront;\nvar _c;\n$RefreshReg$(_c, \"ViewSmallsubCategoryinFront\");","map":{"version":3,"names":["useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ViewSmallsubCategoryinFront","_s","navigate","categoryname","subcategoryname","smallsubcategories","setSmallSubcategories","cart","setCart","cartcount","setcartcount","email","localStorage","getItem","fetchData","response","get","data","error","console","storedCart","JSON","parse","length","handleAddToCart","item","log","existingItemIndex","findIndex","cartItem","productId","_id","status","updatedCart","map","index","quantity","Price","userId","name","smallsubcategoryname","image","smallsubcategoryimage","setItem","stringify","window","dispatchEvent","Event","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/components/ViewSmallSubCategoryinFront.js"],"sourcesContent":["\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst  ViewSmallsubCategoryinFront = () => {\r\n  const navigate = useNavigate();\r\n  const { categoryname, subcategoryname } = useParams();\r\n  const [smallsubcategories, setSmallSubcategories] = useState([]);\r\n  const [cart, setCart] = useState([]);\r\n  const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\r\n\r\n  // const userId = localStorage.getItem(\"USER\") || \"guest\"; // User ID from localStorage or default to 'guest'\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch data for small subcategories based on categoryname and subcategoryname\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get(`http://localhost:5000/api/getsubsmallcategory/${categoryname}/${subcategoryname}`);\r\n  //       setSmallSubcategories(response.data);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching data:\", error);\r\n  //     }\r\n  //   };\r\n\r\n  //   fetchData();\r\n\r\n  //   // Load cart from localStorage\r\n\r\n\r\n  //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n  //   const storedCartCount = localStorage.getItem(\"cartcount\") || 0;\r\n\r\n\r\n  //   setCart(storedCart);\r\n  //   setcartcount(Number(storedCartCount));  // Ensure cartcount is a number\r\n  // }, [categoryname, subcategoryname]);\r\n\r\n  // const handleAddToCart = (item) => {\r\n  //   const existingItemIndex = cart.findIndex(\r\n  //     (cartItem) => cartItem.productId === item._id && cartItem.userId === userId && cartItem.status === \"pending\"\r\n  //   );\r\n\r\n  //   let updatedCart;\r\n  //   if (existingItemIndex !== -1) {\r\n  //     // If item already exists, update quantity and price\r\n  //     updatedCart = cart.map((cartItem, index) =>\r\n  //       index === existingItemIndex\r\n  //         ? {\r\n  //             ...cartItem,\r\n  //             quantity: cartItem.quantity + 1,\r\n  //             Price: (cartItem.quantity + 1) * item.Price, // Price update\r\n  //           }\r\n  //         : cartItem\r\n  //     );\r\n  //   } else {\r\n  //     // Add a new item to the cart\r\n  //     updatedCart = [\r\n  //       ...cart,\r\n  //       {\r\n  //         productId: item._id,\r\n  //         userId: userId,\r\n  //         name: item.smallsubcategoryname,\r\n  //         image: item.smallsubcategoryimage,\r\n  //         Price: item.Price,\r\n  //         quantity: 1,\r\n  //         status: \"pending\",\r\n  //       },\r\n  //     ];\r\n  //   }\r\n\r\n  //   // Update the cart and cart count state\r\n  //   setCart(updatedCart);\r\n  //   const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\r\n  //   setcartcount(newCartCount);\r\n\r\n  //   // Store updated cart and cart count in localStorage\r\n\r\n  //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n  //   localStorage.setItem(\"cartcount\", newCartCount);\r\n\r\n  //   // Display success alert\r\n  //   alert(\"Item added to cart!\");\r\n  //   console.log(newCartCount);\r\n\r\n  //   // Dispatch event to notify storage change\r\n  //   window.dispatchEvent(new Event(\"storage\"));\r\n    \r\n  //   // Navigate to the add to cart page\r\n  //   navigate(\"/viewaddtocart\");\r\n  // };\r\n\r\n  // replace\r\n    // Add near top \r\nconst email = localStorage.getItem(\"Email\") || \"guest\";  \r\nuseEffect(() => {\r\n  // Fetch small subcategories\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/getsubsmallcategory/${categoryname}/${subcategoryname}`);\r\n      setSmallSubcategories(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  fetchData();\r\n\r\n  // Load cart for this user\r\n  const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];//particular user ka data nikana\r\n  setCart(storedCart);\r\n  setcartcount(storedCart.length);\r\n}, [categoryname, subcategoryname, email]);\r\n\r\nconst handleAddToCart = (item) => {\r\n\r\n  if(email){\r\n    console.log()\r\n  }\r\n  const existingItemIndex = cart.findIndex(\r\n    (cartItem) => cartItem.productId === item._id && cartItem.status === \"pending\"\r\n  );\r\n\r\n  let updatedCart;\r\n  if (existingItemIndex !== -1) {\r\n    updatedCart = cart.map((cartItem, index) =>\r\n      index === existingItemIndex\r\n        ? {\r\n            ...cartItem,   //pehle waale item ki saari properties copy kar lo (spread operator)\r\n            quantity: cartItem.quantity + 1,\r\n            Price: (cartItem.quantity + 1) * item.Price,\r\n          }\r\n        : cartItem   //agar nahi (false), to purana item waise ka waise hi le lo\r\n\r\n    );\r\n  } else {\r\n    updatedCart = [\r\n      ...cart,\r\n      {\r\n        productId: item._id,\r\n        userId: email,\r\n        name: item.smallsubcategoryname,\r\n        image: item.smallsubcategoryimage,\r\n        Price: item.Price,\r\n        quantity: 1,\r\n        status: \"pending\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  setCart(updatedCart);\r\n  setcartcount(updatedCart.length);\r\n\r\n  // Save to localStorage using email\r\n  localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n  localStorage.setItem(\"cartcount\", updatedCart.length);\r\n  window.dispatchEvent(new Event(\"storage\"));\r\n\r\n  alert(\"Item added to cart!\");\r\n  navigate(\"/viewaddtocart\");\r\n  \r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n    \r\n    \r\n      <h2 className=\"text-center mb-4\">{subcategoryname} Products</h2>\r\n\r\n      <div className=\"row\">\r\n        {smallsubcategories.map((item) => (\r\n          <div className=\"col-md-4 mb-4\" key={item._id}>\r\n            <div className=\"card\">\r\n              <img src={item.smallsubcategoryimage} className=\"card-img-top\" alt={item.smallsubcategoryname} />\r\n              <div className=\"card-body\">\r\n                <h5>{item.smallsubcategoryname}</h5>\r\n                <p>Price: ₹{item.Price}</p>\r\n                <button className=\"btn btn-primary w-100\" onClick={() => handleAddToCart(item)}>\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  ViewSmallsubCategoryinFront;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}