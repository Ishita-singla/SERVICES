{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\Admin\\\\GetOrders.js\",\n  _s = $RefreshSig$();\n// import React,{useEffect,useState} from 'react'\n\n// const Getorders =() => {\n//     const [orders,setOrders]=useState([])\n//     useEffect(() => {\n//         const fetchPendingOrders = async () => {\n//           try {\n//             const response = await fetch(\"http://localhost:5000/api/getorders\", {\n//               method: \"GET\",\n//               headers: {\n//                 \"Content-Type\": \"application/json\"\n//               }\n//             });\n\n//             const data = await response.json();\n//             setOrders(data.orders); // backend se aane wale orders ko state me daal diya\n//           } catch (error) {\n//             console.error(\"Error fetching pending orders:\", error);\n//           }\n//         };\n\n//         fetchPendingOrders();\n//       }, []);\n\n//   return (\n\n//     <div className=\"container mt-4\">\n//       <h2>Pending Orders</h2>\n//       {orders.length === 0 ? (\n//         <p>No pending orders found.</p>\n//       ) : (\n//         orders.map((order, index) => (\n//           <div key={index} className=\"card mb-3 p-3 shadow-sm\">\n//             <p><strong>Service:</strong> {order.cartItems[0]?.name }</p>\n//             <p><strong>Date:</strong> {order.serviceDate}</p>\n//             <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\n//             <p><strong>User:</strong> {order.userId?.Name || \"No name\"} ({order.userId?.Email || \"No email\"})</p>\n//             <p><strong>Status:</strong> {order.deliveryStatus}</p>\n//           </div>\n//         ))\n//       )}\n//     </div>\n\n// )\n// }\n\n// export default Getorders\n\n// import React, { useEffect, useState } from 'react';\n\n// const Getorders = () => {\n//   const [orders, setOrders] = useState([]);\n//   const [email, setEmail] = useState(\"\"); // selected email\n\n//   useEffect(() => {\n//     const fetchOrders = async () => {\n//       try {\n//         const res = await fetch(\"http://localhost:5000/api/getorders\");\n//         const data = await res.json();\n//         setOrders(data.orders);\n//       } catch (err) {\n//         console.error(\"Error:\", err);\n//       }\n//     };\n\n//     fetchOrders();\n//   }, []);\n\n//   // unique emails\n//   const emails = [...new Set(orders.map(o => o.userId?.Email).filter(Boolean))];\n\n//   const filtered = email ? orders.filter(o => o.userId?.Email === email) : [];\n\n//   return (\n//     <div className=\"container mt-4\">\n//       <h3>Select Email to View Orders</h3>\n\n//       {/* Dropdown */}\n//       <select\n//         className=\"form-select mb-3\"\n//         value={email}\n//         onChange={(e) => setEmail(e.target.value)}\n//       >\n//         <option value=\"\">-- Select Email --</option>\n//         {emails.map((e, i) => (\n//           <option key={i} value={e}>{e}</option>\n//         ))}\n//       </select>\n\n//       {/* Orders for selected email */}\n//       {filtered.length === 0 && email && <p>No orders found for this user.</p>}\n\n//       {filtered.map((order, i) => (\n//         <div key={i} className=\"card mb-2 p-3\">\n//           <p><strong>Service:</strong> {order.cartItems[0]?.name}</p>\n//           <p><strong>Date:</strong> {order.serviceDate}</p>\n//           <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\n//           <p><strong>Status:</strong> {order.deliveryStatus}</p>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default Getorders;\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetOrdersInAdmin = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [email, setEmail] = useState('');\n  const fetchOrdersByEmail = async email => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/getordersbyemail/${email}`);\n      const data = await response.json();\n      setOrders(data.orders);\n    } catch (error) {\n      console.error(\"Error fetching orders:\", error);\n    }\n  };\n  useEffect(() => {\n    if (email) {\n      fetchOrdersByEmail(email);\n    }\n  }, [email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Email to View Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-3\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter user email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), orders.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found for this email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this) : orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-4 p-3 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Order #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.cartItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.name, \" - Quantity: \", item.quantity, \" - \\u20B9\", item.price]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 16\n        }, this), \" \", order.serviceDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this), \" \\u20B9\", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 16\n        }, this), \" \", order.deliveryStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(GetOrdersInAdmin, \"cy6tp/Bd3Z2dUSbM7Zd7Lhd2ZmI=\");\n_c = GetOrdersInAdmin;\nexport default GetOrdersInAdmin;\nvar _c;\n$RefreshReg$(_c, \"GetOrdersInAdmin\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GetOrdersInAdmin","_s","orders","setOrders","email","setEmail","fetchOrdersByEmail","response","fetch","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","length","map","order","index","cartItems","item","idx","name","quantity","price","serviceDate","totalAmount","deliveryStatus","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/Admin/GetOrders.js"],"sourcesContent":["// import React,{useEffect,useState} from 'react'\r\n\r\n// const Getorders =() => {\r\n//     const [orders,setOrders]=useState([])\r\n//     useEffect(() => {\r\n//         const fetchPendingOrders = async () => {\r\n//           try {\r\n//             const response = await fetch(\"http://localhost:5000/api/getorders\", {\r\n//               method: \"GET\",\r\n//               headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//               }\r\n//             });\r\n    \r\n//             const data = await response.json();\r\n//             setOrders(data.orders); // backend se aane wale orders ko state me daal diya\r\n//           } catch (error) {\r\n//             console.error(\"Error fetching pending orders:\", error);\r\n//           }\r\n//         };\r\n    \r\n//         fetchPendingOrders();\r\n//       }, []);\r\n    \r\n    \r\n\r\n//   return (\r\n\r\n//     <div className=\"container mt-4\">\r\n//       <h2>Pending Orders</h2>\r\n//       {orders.length === 0 ? (\r\n//         <p>No pending orders found.</p>\r\n//       ) : (\r\n//         orders.map((order, index) => (\r\n//           <div key={index} className=\"card mb-3 p-3 shadow-sm\">\r\n//             <p><strong>Service:</strong> {order.cartItems[0]?.name }</p>\r\n//             <p><strong>Date:</strong> {order.serviceDate}</p>\r\n//             <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\r\n//             <p><strong>User:</strong> {order.userId?.Name || \"No name\"} ({order.userId?.Email || \"No email\"})</p>\r\n//             <p><strong>Status:</strong> {order.deliveryStatus}</p>\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n\r\n\r\n// )\r\n// }\r\n\r\n// export default Getorders\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// const Getorders = () => {\r\n//   const [orders, setOrders] = useState([]);\r\n//   const [email, setEmail] = useState(\"\"); // selected email\r\n\r\n//   useEffect(() => {\r\n//     const fetchOrders = async () => {\r\n//       try {\r\n//         const res = await fetch(\"http://localhost:5000/api/getorders\");\r\n//         const data = await res.json();\r\n//         setOrders(data.orders);\r\n//       } catch (err) {\r\n//         console.error(\"Error:\", err);\r\n//       }\r\n//     };\r\n\r\n//     fetchOrders();\r\n//   }, []);\r\n\r\n//   // unique emails\r\n//   const emails = [...new Set(orders.map(o => o.userId?.Email).filter(Boolean))];\r\n\r\n//   const filtered = email ? orders.filter(o => o.userId?.Email === email) : [];\r\n\r\n//   return (\r\n//     <div className=\"container mt-4\">\r\n//       <h3>Select Email to View Orders</h3>\r\n\r\n//       {/* Dropdown */}\r\n//       <select\r\n//         className=\"form-select mb-3\"\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//       >\r\n//         <option value=\"\">-- Select Email --</option>\r\n//         {emails.map((e, i) => (\r\n//           <option key={i} value={e}>{e}</option>\r\n//         ))}\r\n//       </select>\r\n\r\n//       {/* Orders for selected email */}\r\n//       {filtered.length === 0 && email && <p>No orders found for this user.</p>}\r\n\r\n//       {filtered.map((order, i) => (\r\n//         <div key={i} className=\"card mb-2 p-3\">\r\n//           <p><strong>Service:</strong> {order.cartItems[0]?.name}</p>\r\n//           <p><strong>Date:</strong> {order.serviceDate}</p>\r\n//           <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\r\n//           <p><strong>Status:</strong> {order.deliveryStatus}</p>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Getorders;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst GetOrdersInAdmin = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [email, setEmail] = useState('');\r\n\r\n  const fetchOrdersByEmail = async (email) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/getordersbyemail/${email}`);\r\n      const data = await response.json();\r\n      setOrders(data.orders);\r\n    } catch (error) {\r\n      console.error(\"Error fetching orders:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (email) {\r\n      fetchOrdersByEmail(email);\r\n    }\r\n  }, [email]);\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>Select Email to View Orders</h2>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control mb-3\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Enter user email\"\r\n      />\r\n\r\n      {orders.length === 0 ? (\r\n        <p>No orders found for this email.</p>\r\n      ) : (\r\n        orders.map((order, index) => (\r\n          <div key={index} className=\"card mb-4 p-3 shadow-sm\">\r\n            <h5>Order #{index + 1}</h5>\r\n            <div>\r\n              <strong>Items:</strong>\r\n              <ul>\r\n                {order.cartItems.map((item, idx) => (\r\n                  <li key={idx}>\r\n                    {item.name} - Quantity: {item.quantity} - ₹{item.price}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <p><strong>Date:</strong> {order.serviceDate}</p>\r\n            <p><strong>Amount:</strong> ₹{order.totalAmount}</p>\r\n            <p><strong>Status:</strong> {order.deliveryStatus}</p>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetOrdersInAdmin;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}