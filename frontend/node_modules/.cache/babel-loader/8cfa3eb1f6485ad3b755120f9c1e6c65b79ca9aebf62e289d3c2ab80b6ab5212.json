{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\components\\\\viewAddtocart.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import axios from \"axios\";\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n// import { Link } from 'react-router-dom';\n\n// const ViewAddtocart = () => {\n//     const [items,setItems]=useState([]);\n//     const [show, setShow] = useState(false);\n//     const [deleteId, setDeleteId] = useState(null);\n\n//     const fetchData=async()=>{\n//         try{\n//             const response=await axios.get(\"http://localhost:5001/api/viewaddtocart\");\n//             console.log(\"cart data\",response.data);\n//             setItems(response.data);\n//         }catch(err){\n//             console.log(\"error during fetching blogs data\",err);\n//         }\n//     };\n//     useEffect(()=>{\n//         fetchData();\n//         },[]);\n\n//     // डिलीट करने के लिए Modal Open करें\n//     const handleShow = (id) => {\n//         console.log(\"Item to be deleted:\", id);\n//         setDeleteId(id);\n//         setShow(true);\n//     };\n\n//     // डिलीट कन्फर्म करें\n//     const deleteItem = async () => {\n//         if (!deleteId) {\n//             console.log(\"No item selected for deletion.\");\n//             return;\n//         }\n\n//         try {\n//             console.log(\"Deleting item:\", deleteId);\n//             await axios.delete(`http://localhost:5001/api/deleteitem/${deleteId}`);\n\n//             // डिलीट होने के बाद UI अपडेट करें\n//             setItems(items.filter((item) => item._id !== deleteId));\n//             setShow(false); // Modal बंद करें\n//         } catch (err) {\n//             console.log(\"Error deleting item:\", err);\n//         }\n//     };\n\n//   return (\n//     <div className=\"container my-5\">\n//     <h2 className=\"text-center mb-4\">Cart items</h2>\n//     <div className=\"row\">\n//         {items.map((item) => (\n//             <div key={item._id} className=\"col-md-4 mb-4\">\n//                 <div className=\"card h-100\">\n//                     <img src={item.smallsubcategoryimage}  className=\"card-img-top p-5\" style={{ height: \"250px\", width: \"100%\", objectFit: \"cover\" }}  />\n//                     <div className=\"card-body\">\n//                     <h5 className=\"card-title\">{item.subcategoryname}</h5>\n\n//                         <h5 className=\"card-title\">{item.smallsubcategoryname}</h5>\n//                         <h5 className=\"card-text\">{item.Price}</h5>\n//                         <div className=\"mb-0 d-flex  \">\n//                             {/* <Link to={`/blogdetail/${item._id}`} className=\"btn btn-primary btn-sm\">\n\n//                                 Read More\n//                             </Link> */}\n//                             <button className=\"btn btn-danger btn-sm\" onClick={() => handleShow(item._id)}>\n//                                 Remove\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//         ))}\n//     </div>\n//     {/* Delete Confirmation Modal */}\n//     <Modal show={show} onHide={() => setShow(false)}>\n//                 <Modal.Header closeButton>\n//                     <Modal.Title>Confirm Delete</Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body>Are you sure you want to delete this item?</Modal.Body>\n//                 <Modal.Footer>\n//                     <Button variant=\"secondary\" onClick={() => setShow(false)}>\n//                         Cancel\n//                     </Button>\n//                     <Button variant=\"danger\" onClick={deleteItem}>\n//                         Delete\n//                     </Button>\n//                 </Modal.Footer>\n//             </Modal>\n\n// </div>\n\n//   )\n// }\n\n// export default ViewAddtocart;\n\n// import { useEffect, useState } from \"react\";\n// import { Link,useNavigate } from \"react-router-dom\";\n\n// const ViewAddtocart = () => {\n//   const [cart, setCart] = useState([]);\n//   const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\n//   const [orderplaced,setorderplaced]=useState(false);\n//   const [deliveryPreference, setDeliveryPreference] = useState(\"normal\");\n//   const navigate = useNavigate();\n\n//   // useEffect(() => {\n//   //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\n//   //   setCart(storedCart);\n//   // }, []);\n\n//   // const updateCart = (updatedCart) => {\n//   //   setCart(updatedCart);\n//   //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//   // };\n\n//   // replace\n//   const email = localStorage.getItem(\"Email\") || \"guest\";\n\n// useEffect(() => {\n//   const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n//   setCart(storedCart);\n// }, [email]);\n\n// const updateCart = (updatedCart) => {\n//   setCart(updatedCart);\n//   localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n//   localStorage.setItem(\"cartcount\", updatedCart.length);\n//   window.dispatchEvent(new Event(\"storage\"));\n// };\n\n//   const handleIncreaseQuantity = (index) => {\n//     const updatedCart = cart.map((item, i) =>\n//       i === index\n//         ? { ...item, quantity: item.quantity + 1, Price: (item.quantity + 1) * (item.Price / item.quantity) }\n//         : item\n//     );\n//     updateCart(updatedCart);\n//   };\n\n// const handleDecreaseQuantity = (index) => {\n//     const updatedCart = cart\n//       .map((item, i) => {\n//         if (i === index) {\n//           const newQuantity = item.quantity - 1;\n//           if (newQuantity === 0) return null; // Mark for removal\n//           return { \n//             ...item, \n//             quantity: newQuantity, \n//             Price: (newQuantity * (item.Price / item.quantity)).toFixed(2) \n//           };\n//         }\n//         return item;\n//       })\n//       .filter(item => item !== null); // Remove items marked as null\n\n//     updateCart(updatedCart);\n\n//     const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\n//     setcartcount(newCartCount);\n\n//     // Store updated cart and cart count in localStorage\n//     localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\n//     localStorage.setItem(\"cartcount\", newCartCount);\n\n//     window.dispatchEvent(new Event(\"storage\"));\n\n//   };\n\n//   const handleRemoveItem = (index) => {\n//     const updatedCart = cart.filter((_, i) => i !== index);\n//     updateCart(updatedCart);\n//   };\n\n//   const handlePlaceOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n\n//     if (!userId || cart.length === 0) {\n//       alert(\"Invalid order data. Please log in and add items.\");\n//       return;\n//     }\n//     const extracharge=deliveryPreference===\"Fast\"? 50 :0;\n//     const finalAmount=parseFloat(totalAmount)+extracharge;\n\n//     try {\n//       const response = await fetch(\"http://localhost:5001/api/orderplaced\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId,\n//           cartItems: cart,\n//           totalAmount:finalAmount,\n//           deliveryPreference, // <== ADD THIS LINE\n//           userEmail:localStorage.getItem(\"Email\"),\n//         }),\n//       });\n\n//       const data = await response.json();\n\n//       if (response.status === 201) {\n//         alert(data.message);\n//         // Reset cart\n//         localStorage.removeItem(`cart_${email}`);\n//         localStorage.setItem(\"cartcount\", 0);\n//         setCart([]);\n//         setcartcount(0);\n//         setorderplaced(true);\n//         window.dispatchEvent(new Event(\"storage\"));\n//       } else {\n//         alert(data.message || \"Order not placed\");\n//       }\n//     } catch (error) {\n//       alert(\"Something went wrong. Please try again.\");\n//       console.error(\"Order placement error:\", error);\n//     }\n//   };\n\n//   // const placeOrder = async () => {\n//   //   const userId = localStorage.getItem(\"USER\");\n//   //   navigate(`/Checkout/${userId}`);\n\n//   // };\n//   const placeOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n//     navigate(`/Checkout/${userId}`, {\n//       state: {\n//         deliveryPreference,\n//         totalAmount: parseFloat(totalAmount),\n//         finalAmount: parseFloat(totalAmount) + (deliveryPreference === \"Fast\" ? 50 : 0)\n//       }\n//     });\n//   };\n\n//   const totalAmount= cart\n//   .reduce((acc, item) => acc + Number(item.Price), 0)\n//   .toFixed(2);\n\n//   return (\n//     // <div className=\"container my-5\">\n//     //   <h2 className=\"text-center mb-4\">Your Cart</h2>\n//     //   {cart.length === 0 ? (\n//     //     <p className=\"text-center\">Your cart is empty.</p>\n//     //   ) : (\n//     //     <div className=\"row\">\n//     //       {cart.map((item, index) => (\n//     //         <div key={index} className=\"col-md-4 mb-4\">\n//     //           <div className=\"card\">\n//     //             <img src={item.image} className=\"card-img-top\" alt={item.name} />\n//     //             <div className=\"card-body\">\n//     //               <h5>{item.name}</h5>\n//     //               <p>Price: ₹{item.Price}</p>\n//     //               <p>Quantity: {item.quantity}</p>\n\n//     //               <div className=\"d-flex justify-content-between\">\n//     //                 <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\n//     //                 <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\n//     //                 <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\n//     //               </div>\n//     //             </div>\n//     //           </div>\n//     //         </div>\n//     //       ))}\n\n//     //     </div>\n\n//     //   )}\n//     // </div>\n\n// //     <div className=\"container my-5\">\n// //   <h2 className=\"text-center mb-4\">Your Cart</h2>\n// //   {cart.length === 0 ? (\n// //     <p className=\"text-center\">Your cart is empty.</p>\n// //   ) : (\n// //     <div className=\"row\">\n\n// //       {/* t Column: Cart Items */}\n// //       <div className=\"col-md-8\">\n// //         <div className=\"row\">\n// //           {cart.map((item, index) => (\n// //             <div key={index} className=\"col-md-6 mb-4\">\n// //               <div className=\"card\">\n// //                 <img src={item.image} className=\"card-img-top\" alt={item.name} />\n// //                 <div className=\"card-body\">\n// //                   <h5>{item.name}</h5>\n// //                   <p>Price: ₹{item.Price}</p>\n// //                   <p>Quantity: {item.quantity}</p>\n\n// //                   <div className=\"d-flex justify-content-between\">\n// //                     <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\n// //                     <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\n// //                     <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\n// //                   </div>\n// //                 </div>\n// //               </div>\n// //             </div>\n// //           ))}\n// //         </div>\n// //       </div>\n\n// //       {/* right Column: Cart Summary */}\n\n// // <div className=\"col-md-4 mb-4\">\n// //   <div className=\"card p-3\">\n// //     <h5 className=\"mb-3\">Cart Summary</h5>\n// //     <ul className=\"list-group mb-3\">\n// //       {cart.map((item, index) => (\n// //         <li key={index} className=\"list-group-item d-flex justify-content-between\">\n// //           <span>{item.name} </span>\n// //           <span>₹{Number(item.Price).toFixed(2)}</span>\n// //         </li>\n// //       ))}\n// //     </ul>\n// //     {/* <h6 className=\"text-end\">\n// //       Total: ₹{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2 }).format(\n// //         cart.reduce((acc, item) => acc + Number(item.Price), 0)\n// //       )}\n// //     </h6> */}\n// //     <h6 className=\"text-end\">\n// //   Total: ₹{cart.reduce((acc, item) => acc + Number(item.Price), 0).toFixed(2)}\n// // </h6>\n\n// //   </div>\n// // </div>\n\n// //     </div>\n// //   )}\n// // </div>\n\n// <div className=\"container my-5\">\n//   <h2 className=\"text-center mb-4\">Your Cart</h2>\n\n//   {cart.length === 0 ? (\n//   <div className=\"text-center\">\n//   <p>{orderplaced ? \"Your order is placed.\" : \"Your cart is empty.\"}</p>\n//   <Link\n//     to=\"/past-orders\" \n//     className=\"btn btn-primary mt-2\"\n//     style={{ textDecoration: \"none\" }}\n//   >\n//     View Past Orders\n//   </Link>\n// </div>\n\n// ) : (\n\n//     <div className=\"row\">\n//       {/* Left Column: Cart Items */}\n//       <div className=\"col-md-8\">\n//         {cart.map((item, index) => (\n//           <div key={index} className=\"d-flex mb-4 border rounded p-3 shadow-sm\">\n//             {/* Image */}\n//             <img\n//               src={item.image}\n//               alt={item.name}\n//               className=\"img-fluid rounded\"\n//               style={{ width: '150px', height: '150px', objectFit: 'cover' }}\n//             />\n\n//             {/* Details */}\n//             <div className=\"ms-3 flex-grow-1\">\n//               <h5>{item.name}</h5>\n//               <p className=\"mb-1\">Price: ₹{Number(item.Price).toFixed(2)}</p>\n//               <p className=\"mb-2\">Quantity: {item.quantity}</p>\n\n// <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\n//   <button\n//     style={{\n//       width: \"32px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       backgroundColor: \"#fff\",\n//       color: \"#333\",\n//       fontSize: \"18px\",\n//       fontWeight: \"bold\",\n//       borderRadius: \"50%\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       cursor: \"pointer\",\n//     }}\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\n//     onClick={() => handleDecreaseQuantity(index)}\n//   >\n//     −\n//   </button>\n\n//   <div\n//     style={{\n//       width: \"40px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       textAlign: \"center\",\n//       lineHeight: \"30px\",\n//       borderRadius: \"4px\",\n//       fontWeight: \"500\",\n//     }}\n//   >\n//     {item.quantity}\n//   </div>\n\n//   <button\n//     style={{\n//       width: \"32px\",\n//       height: \"32px\",\n//       border: \"1px solid #c2c2c2\",\n//       backgroundColor: \"#fff\",\n//       color: \"#333\",\n//       fontSize: \"18px\",\n//       fontWeight: \"bold\",\n//       borderRadius: \"50%\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//       cursor: \"pointer\",\n//     }}\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\n//     onClick={() => handleIncreaseQuantity(index)}\n//   >\n//     +\n//   </button>\n\n//   <button\n//     className=\"btn btn-sm btn-danger ms-3\"\n//     onClick={() => handleRemoveItem(index)}\n//   >\n//     Remove\n//   </button>\n// </div>\n\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Right Column: Cart Summary */}\n//       <div className=\"col-md-4 mb-4\">\n//         <div className=\"card p-3 shadow-sm\">\n//           <h5 className=\"mb-3\">Cart Summary</h5>\n//           <ul className=\"list-group mb-3\">\n//             {cart.map((item, index) => (\n//               <li\n//                 key={index}\n//                 className=\"list-group-item d-flex justify-content-between\"\n//               >\n//                 <span>{item.name}</span>\n//                 <span>₹{Number(item.Price).toFixed(2)}</span>\n//               </li>\n//             ))}\n//           </ul>\n\n//           <div className=\"mb-3\">\n//   <label htmlFor=\"deliveryPreference\" className=\"form-label\">\n//     Delivery Preference\n//   </label>\n//   <select\n//     id=\"deliveryPreference\"\n//     className=\"form-select\"\n//     value={deliveryPreference}\n//     onChange={(e) => setDeliveryPreference(e.target.value)}\n//   >\n//     <option value=\"normal\">Normal (Free,7 Days)</option>\n//     <option value=\"Fast\">Fast (Rs.50, 2 Days)</option>\n//   </select>\n// </div>\n// <h6 className=\"text-end\">\n//             Total: ₹\n//             {(parseFloat(totalAmount)+(deliveryPreference===\"Fast\"?50:0)).toFixed(2)}\n//           </h6>\n\n//           <button\n//     style={{\n//       width: \"100%\",\n//       backgroundColor: \"#fb641b\",\n//       color: \"#fff\",\n//       border: \"none\",\n//       borderRadius: \"2px\",\n//       padding: \"12px 0\",\n//       fontSize: \"16px\",\n//       fontWeight: \"bold\",\n//       boxShadow: \"0 1px 2px 0 rgba(0, 0, 0, 0.2)\",\n//       cursor: \"pointer\",\n//       marginTop: \"16px\"\n//     }}\n//     // onClick={handlePlaceOrder}\n//     onClick={placeOrder}\n//   >\n//     PLACE ORDER\n//   </button>\n//         </div>\n//       </div>\n//     </div>\n//   )}\n// </div>\n\n//   );\n// };\n\n// export default ViewAddtocart;\n// import { useEffect, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Addtocart.css\";\n// import api from \"../axios\";\n\n// const ViewAddtocart = () => {\n\n//   const [cart, setCart] = useState([]);\n//   const [cartcount, setCartcount] = useState(0);\n//   const [orderplaced, setOrderPlaced] = useState(false);\n//   const [deliveryType, setDeliveryType] = useState(\"\");\n//   const [address, setAddress] = useState(\"\");\n//   const [city, setCity] = useState(\"\");\n//   const [pincode, setPincode] = useState(\"\");\n//   const [step, setStep] = useState(0);\n\n//   const navigate = useNavigate();\n//   const email = localStorage.getItem(\"EMAIL\") || \"guest\";\n\n//   // Ensure the user is logged in and is not an admin\n//   useEffect(() => {\n//     const user = localStorage.getItem(\"USER\");\n//     const role = localStorage.getItem(\"Role\");\n\n//     if (!user || role === \"admin\") {\n//       console.log(\"Role in localStorage:\", role);  // Debugging: Check the role\n//       alert(\"Access denied! Please login as a valid user.\");\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);\n\n//   // Load cart from localStorage on initial render\n//   useEffect(() => {\n//     const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n//     console.log(\"Loaded cart from localStorage:\", storedCart); // 👀 Debug\n\n//     setCart(storedCart);\n//     setCartcount(storedCart.length);\n//   }, [email]);\n\n//   // Function to update cart state and localStorage\n//   const updateCart = (updatedCart) => {\n//     setCart(updatedCart);\n//     setCartcount(updatedCart.length);\n//     localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n//     localStorage.setItem(\"cartcount\", updatedCart.length);\n//     window.dispatchEvent(new Event(\"storage\"));\n//   };\n\n//   // Function to increase item quantity\n//   const handleIncreaseQuantity = (index) => {\n//     const updatedCart = cart.map((item, i) =>\n//       i === index\n//         ? {\n//             ...item,\n//             quantity: item.quantity + 1,\n//             Price: (item.unitPrice * (item.quantity + 1)).toFixed(2),\n//           }\n//         : item\n//     );\n//     updateCart(updatedCart);\n//   };\n\n//   const handleDecreaseQuantity = (index) => {\n//     const updatedCart = cart\n//       .map((item, i) => {\n//         if (i === index) {\n//           const newQuantity = item.quantity - 1;\n//           if (newQuantity === 0) return null;\n//           return {\n//             ...item,\n//             quantity: newQuantity,\n//             Price: (item.unitPrice * newQuantity).toFixed(2),\n//           };\n//         }\n//         return item;\n//       })\n//       .filter((item) => item !== null);\n//     updateCart(updatedCart);\n//   };\n//     // Function to remove item from cart\n//   const handleRemoveItem = (index) => {\n//     const updatedCart = cart.filter((_, i) => i !== index);\n//     updateCart(updatedCart);\n//   };\n\n//   // Calculate total amount of the cart\n//   const totalAmount = cart\n//     .reduce((total, item) => total + parseFloat(item.Price), 0)\n//     .toFixed(2);\n\n//   // Add extra charges for fast delivery\n//   const extracharge = deliveryType === \"Fast\" ? 50 : 0;\n//   const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\n\n//   // Handle placing the order\n//   const handlePlaceOrder = async () => {\n//     const userId = localStorage.getItem(\"USER\");\n\n//     if (!userId || cart.length === 0) {\n//       alert(\"Invalid order data. Please log in and add items.\");\n//       return;\n//     }\n\n//     if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\n//       alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\n//       return;\n//     }\n\n//     try {\n//       const response = await api.post(\"/orders\", {\n//         userId,\n//         cartItems: cart,\n//         totalAmount: totalAmountWithDelivery,\n//         pincode,\n//         address,\n//         city,\n//         serviceDate: new Date(),\n//         deliveryType,\n//         userEmail: email,\n//       });\n\n//       const orderData = response.data.order; // ✅ FIXED HERE\n\n//       if (response.status === 201 && orderData._id) {\n//         const options = {\n//           key: \"rzp_test_99IwqPHWTFKkXS\", // ✅ Use real Razorpay key in production\n//           amount: parseFloat(totalAmountWithDelivery) * 100, // amount in paise\n//           currency: \"INR\",\n//           name: \"Softwizz\",\n//           description: \"Order Payment\",\n//           handler: async function (razorpayResponse) {\n//             try {\n//               const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\n//                 paymentId: razorpayResponse.razorpay_payment_id,\n//                 paymentStatus: \"Paid\",\n//               });\n\n//               if (paymentRes.status === 200) {\n//                 alert(\"Payment Successful!\");\n//                 localStorage.removeItem(`cart_${email}`);\n//                 localStorage.setItem(\"cartcount\", 0);\n//                 setCart([]);\n//                 setCartcount(0);\n//                 setOrderPlaced(true);\n//                 window.dispatchEvent(new Event(\"storage\"));\n//                 navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\n//               } else {\n//                 alert(\"Payment captured but failed to update order.\");\n//               }\n//             } catch (err) {\n//               console.error(\"Payment update failed:\", err);\n//               alert(\"Payment succeeded but order update failed.\");\n//             }\n//           },\n//           prefill: {\n//             name: address,\n//             email: email,\n//             contact: \"9999999999\", // Optional\n//           },\n//           theme: {\n//             color: \"#3399cc\",\n//           },\n//         };\n\n//         const rzp = new window.Razorpay(options);\n//         rzp.open();\n//       } else {\n//         alert(\"Failed to create order. Try again.\");\n//       }\n//     } catch (error) {\n//       console.error(\"Order placement error:\", error);\n//       alert(\"Something went wrong. Please try again.\");\n//     }\n//   };\n//       return (\n//     <div className=\"addtocart-container py-5\">\n//       {/* Step Indicators */}\n//       <div className=\"checkout-steps mb-4\">\n//         {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\n//           <div\n//             key={idx}\n//             className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\n//           >\n//             <div className=\"step-circle\">{idx + 1}</div>\n//             <div className=\"step-label\">{label}</div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Step 0 - Cart */}\n//       {step === 0 && (\n//         <div className=\"row\">\n//           <div className=\"col-md-8\">\n//             <h4>Your Cart</h4>\n//             <div className=\"row\">\n//               {cart.map((item, index) => (\n//                 <div key={index} className=\"col-md-6 mb-4\">\n//                   <div className=\"card cart-card shadow-sm\">\n//                     <img\n//                       src={item.image}\n//                       className=\"card-img-top\"\n//                       style={{ height: \"180px\", objectFit: \"cover\" }}\n//                     />\n//                     <div className=\"card-body\">\n//                       <h5 className=\"card-title\">{item.name}</h5>\n//                       <p className=\"card-text\">\n//                         ₹{item.Price} × {item.quantity}\n//                       </p>\n//                       <div className=\"d-flex justify-content-between\">\n//                         <button\n//                           className=\"btn btn-success btn-sm\"\n//                           onClick={() => handleIncreaseQuantity(index)}\n//                         >\n//                           +\n//                         </button>\n//                         <button\n//                           className=\"btn btn-warning btn-sm text-white\"\n//                           onClick={() => handleDecreaseQuantity(index)}\n//                         >\n//                           -\n//                         </button>\n//                         <button\n//                           className=\"btn btn-danger btn-sm\"\n//                           onClick={() => handleRemoveItem(index)}\n//                         >\n//                           Remove\n//                         </button>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n\n//           <div className=\"col-md-4\">\n//             <div className=\"card p-3\">\n//               <h5>Order Summary</h5>\n//               <ul className=\"list-group list-group-flush\">\n//                 {cart.map((item, idx) => (\n//                   <li key={idx} className=\"list-group-item d-flex justify-content-between\">\n//                     <span>{item.name} × {item.quantity}</span>\n//                     {/* <span>₹{item.Price}</span> */}\n//                     <span>₹{Number(item.Price).toFixed(2)}</span>\n//                   </li>\n//                 ))}\n//                 <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\n//                   <span>Total</span>\n//                   <span>₹{totalAmount}</span>\n//                 </li>\n//               </ul>\n//               <button\n//                 className=\"btn btn-primary mt-3 w-100\"\n//                 disabled={cart.length === 0}\n//                 onClick={() => setStep(1)}\n//               >\n//                 Continue\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Step 1 - Address */}\n//       {step === 1 && (\n//         <div className=\"row justify-content-center\">\n//           <div className=\"col-md-6\">\n//             <h4>Delivery Address</h4>\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"Address\"\n//               value={address}\n//               onChange={(e) => setAddress(e.target.value)}\n//             />\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"City\"\n//               value={city}\n//               onChange={(e) => setCity(e.target.value)}\n//             />\n//             <input\n//               className=\"form-control my-2\"\n//               placeholder=\"Pincode\"\n//               value={pincode}\n//               onChange={(e) => setPincode(e.target.value)}\n//             />\n//             <select\n//               className=\"form-control my-2\"\n//               value={deliveryType}\n//               onChange={(e) => setDeliveryType(e.target.value)}\n//             >\n//               <option value=\"\">Select Delivery Type</option>\n//               <option value=\"Fast\">Fast (₹50, 2 Days)</option>\n//               <option value=\"Slow\">Normal (Free, 4 Days)</option>\n//             </select>\n\n//             <button\n//               className=\"btn btn-primary w-100\"\n//               onClick={() => {\n//                 if (address && city && pincode && deliveryType) {\n//                   setStep(2);\n//                 } else {\n//                   alert(\"Please fill all fields!\");\n//                 }\n//               }}\n//             >\n//               Continue to Payment\n//             </button>\n\n//             <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\n//               Back to Cart\n//             </button>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Step 2 - Payment */}\n//       {step === 2 && (\n//         <div className=\"text-center\">\n//           <h4>Payment</h4>\n//           <p>Simulated payment method (Cash/UPI etc)</p>\n//           <button className=\"btn btn-dark\" onClick={() => setStep(3)}>\n//             Continue to Summary\n//           </button>\n//           <br />\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\n//             Back to Address\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Step 3 - Summary */}\n//       {step === 3 && (\n//         <div className=\"text-center\">\n//           <h4>Order Summary</h4>\n//           <p>Total: ₹{totalAmountWithDelivery}</p>\n//           <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\n//             Place Order\n//           </button>\n//           <br />\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\n//             Back to Payment\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ViewAddtocart;\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Addtocart.css\";\nimport api from \"../axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewAddtocart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [cartcount, setCartcount] = useState(0);\n  const [orderplaced, setOrderPlaced] = useState(false);\n  const [deliveryType, setDeliveryType] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [pincode, setPincode] = useState(\"\");\n  const [step, setStep] = useState(0);\n  const navigate = useNavigate();\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\n\n  // Ensure the user is logged in and is not an admin\n  useEffect(() => {\n    const user = localStorage.getItem(\"USER\");\n    const role = localStorage.getItem(\"Role\");\n    if (!user || role === \"admin\") {\n      console.log(\"Role in localStorage:\", role); // Debugging: Check the role\n      alert(\"Access denied! Please login as a valid user.\");\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Load cart from localStorage on initial render\n  useEffect(() => {\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\n    setCart(storedCart);\n    setCartcount(storedCart.length);\n  }, [email]);\n\n  // Function to update cart state and localStorage\n  const updateCart = updatedCart => {\n    setCart(updatedCart);\n    setCartcount(updatedCart.length);\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\n    localStorage.setItem(\"cartcount\", updatedCart.length);\n    window.dispatchEvent(new Event(\"storage\"));\n  };\n\n  // Function to increase item quantity\n  const handleIncreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => i === index ? {\n      ...item,\n      quantity: item.quantity + 1,\n      price: ((item.quantity + 1) * (item.price / item.quantity)).toFixed(2)\n    } : item);\n    updateCart(updatedCart);\n  };\n\n  // Function to decrease item quantity\n  const handleDecreaseQuantity = index => {\n    const updatedCart = cart.map((item, i) => {\n      if (i === index) {\n        const newQuantity = item.quantity - 1;\n        if (newQuantity === 0) return null;\n        return {\n          ...item,\n          quantity: newQuantity,\n          price: (item.price / item.quantity * newQuantity).toFixed(2)\n        };\n      }\n      return item;\n    }).filter(item => item !== null);\n    updateCart(updatedCart);\n  };\n\n  // Function to remove item from cart\n  const handleRemoveItem = index => {\n    const updatedCart = cart.filter((_, i) => i !== index);\n    updateCart(updatedCart);\n  };\n\n  // Calculate total amount of the cart\n  const totalAmount = cart.reduce((total, item) => total + parseFloat(item.price), 0).toFixed(2);\n\n  // Add extra charges for fast delivery\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\n\n  // Handle placing the order\n  const handlePlaceOrder = async () => {\n    const userId = localStorage.getItem(\"USER\");\n    if (!userId || cart.length === 0) {\n      alert(\"Invalid order data. Please log in and add items.\");\n      return;\n    }\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\n      return;\n    }\n    try {\n      const response = await api.post(\"/orders\", {\n        userId,\n        cartItems: cart,\n        totalAmount: totalAmountWithDelivery,\n        pincode,\n        address,\n        city,\n        serviceDate: new Date(),\n        deliveryType,\n        userEmail: email\n      });\n      const orderData = response.data.order; // ✅ FIXED HERE\n\n      if (response.status === 201 && orderData._id) {\n        const options = {\n          key: \"rzp_test_99IwqPHWTFKkXS\",\n          // ✅ Use real Razorpay key in production\n          amount: parseFloat(totalAmountWithDelivery) * 100,\n          // amount in paise\n          currency: \"INR\",\n          name: \"Softwizz\",\n          description: \"Order Payment\",\n          handler: async function (razorpayResponse) {\n            try {\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\n                paymentId: razorpayResponse.razorpay_payment_id,\n                paymentStatus: \"Paid\"\n              });\n              if (paymentRes.status === 200) {\n                alert(\"Payment Successful!\");\n                localStorage.removeItem(`cart_${email}`);\n                localStorage.setItem(\"cartcount\", 0);\n                setCart([]);\n                setCartcount(0);\n                setOrderPlaced(true);\n                window.dispatchEvent(new Event(\"storage\"));\n                navigate(\"/my-orders\"); // ✅ Optionally redirect to a Thank You page\n              } else {\n                alert(\"Payment captured but failed to update order.\");\n              }\n            } catch (err) {\n              console.error(\"Payment update failed:\", err);\n              alert(\"Payment succeeded but order update failed.\");\n            }\n          },\n          prefill: {\n            name: address,\n            email: email,\n            contact: \"9999999999\" // Optional\n          },\n          theme: {\n            color: \"#3399cc\"\n          }\n        };\n        const rzp = new window.Razorpay(options);\n        rzp.open();\n      } else {\n        alert(\"Failed to create order. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Order placement error:\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addtocart-container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-steps mb-4\",\n      children: [\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: idx + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this), step === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: cart.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card cart-card shadow-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                className: \"card-img-top\",\n                style: {\n                  height: \"180px\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1082,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-title\",\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1088,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-text\",\n                  children: [\"\\u20B9\", item.price, \" \\xD7 \", item.quantity]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1089,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => handleIncreaseQuantity(index),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1093,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-warning btn-sm text-white\",\n                    onClick: () => handleDecreaseQuantity(index),\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1099,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => handleRemoveItem(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1105,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1092,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1087,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1078,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card p-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Order Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [cart.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [item.name, \" \\xD7 \", item.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", item.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item fw-bold d-flex justify-content-between border-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", totalAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3 w-100\",\n            disabled: cart.length === 0,\n            onClick: () => setStep(1),\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 9\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Delivery Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Address\",\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"City\",\n          value: city,\n          onChange: e => setCity(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control my-2\",\n          placeholder: \"Pincode\",\n          value: pincode,\n          onChange: e => setPincode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control my-2\",\n          value: deliveryType,\n          onChange: e => setDeliveryType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Delivery Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Fast\",\n            children: \"Fast (\\u20B950, 2 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Slow\",\n            children: \"Normal (Free, 4 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary w-100\",\n          onClick: () => {\n            if (address && city && pincode && deliveryType) {\n              setStep(2);\n            } else {\n              alert(\"Please fill all fields!\");\n            }\n          },\n          children: \"Continue to Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary w-100 mt-2\",\n          onClick: () => setStep(0),\n          children: \"Back to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simulated payment method (Cash/UPI etc)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark\",\n        onClick: () => setStep(3),\n        children: \"Continue to Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary mt-2\",\n        onClick: () => setStep(1),\n        children: \"Back to Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: !orderplaced ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Order Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total: \\u20B9\", totalAmountWithDelivery]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1221,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: handlePlaceOrder,\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mt-2\",\n          onClick: () => setStep(2),\n          children: \"Back to Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1226,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-icon\",\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1232,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-success mt-3\",\n          children: \"Payment Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you for your order. A confirmation email has been sent.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate(\"/\"),\n          children: \"Go to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1231,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1059,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewAddtocart, \"4lil7nlaLETM92A/pOim1awq9MI=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewAddtocart;\nexport default ViewAddtocart;\nvar _c;\n$RefreshReg$(_c, \"ViewAddtocart\");","map":{"version":3,"names":["useEffect","useState","useNavigate","api","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewAddtocart","_s","cart","setCart","cartcount","setCartcount","orderplaced","setOrderPlaced","deliveryType","setDeliveryType","address","setAddress","city","setCity","pincode","setPincode","step","setStep","navigate","email","localStorage","getItem","user","role","console","log","alert","storedCart","JSON","parse","length","updateCart","updatedCart","setItem","stringify","window","dispatchEvent","Event","handleIncreaseQuantity","index","map","item","i","quantity","price","toFixed","handleDecreaseQuantity","newQuantity","filter","handleRemoveItem","_","totalAmount","reduce","total","parseFloat","extracharge","totalAmountWithDelivery","handlePlaceOrder","userId","trim","response","post","cartItems","serviceDate","Date","userEmail","orderData","data","order","status","_id","options","key","amount","currency","name","description","handler","razorpayResponse","paymentRes","put","paymentId","razorpay_payment_id","paymentStatus","removeItem","err","error","prefill","contact","theme","color","rzp","Razorpay","open","className","children","label","idx","fileName","_jsxFileName","lineNumber","columnNumber","src","image","style","height","objectFit","onClick","disabled","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/components/viewAddtocart.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import axios from \"axios\";\r\n// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// const ViewAddtocart = () => {\r\n//     const [items,setItems]=useState([]);\r\n//     const [show, setShow] = useState(false);\r\n//     const [deleteId, setDeleteId] = useState(null);\r\n\r\n\r\n    \r\n//     const fetchData=async()=>{\r\n//         try{\r\n//             const response=await axios.get(\"http://localhost:5001/api/viewaddtocart\");\r\n//             console.log(\"cart data\",response.data);\r\n//             setItems(response.data);\r\n//         }catch(err){\r\n//             console.log(\"error during fetching blogs data\",err);\r\n//         }\r\n//     };\r\n//     useEffect(()=>{\r\n//         fetchData();\r\n//         },[]);\r\n         \r\n        \r\n//     // डिलीट करने के लिए Modal Open करें\r\n//     const handleShow = (id) => {\r\n//         console.log(\"Item to be deleted:\", id);\r\n//         setDeleteId(id);\r\n//         setShow(true);\r\n//     };\r\n\r\n//     // डिलीट कन्फर्म करें\r\n//     const deleteItem = async () => {\r\n//         if (!deleteId) {\r\n//             console.log(\"No item selected for deletion.\");\r\n//             return;\r\n//         }\r\n\r\n//         try {\r\n//             console.log(\"Deleting item:\", deleteId);\r\n//             await axios.delete(`http://localhost:5001/api/deleteitem/${deleteId}`);\r\n\r\n//             // डिलीट होने के बाद UI अपडेट करें\r\n//             setItems(items.filter((item) => item._id !== deleteId));\r\n//             setShow(false); // Modal बंद करें\r\n//         } catch (err) {\r\n//             console.log(\"Error deleting item:\", err);\r\n//         }\r\n//     };\r\n\r\n\r\n//   return (\r\n//     <div className=\"container my-5\">\r\n//     <h2 className=\"text-center mb-4\">Cart items</h2>\r\n//     <div className=\"row\">\r\n//         {items.map((item) => (\r\n//             <div key={item._id} className=\"col-md-4 mb-4\">\r\n//                 <div className=\"card h-100\">\r\n//                     <img src={item.smallsubcategoryimage}  className=\"card-img-top p-5\" style={{ height: \"250px\", width: \"100%\", objectFit: \"cover\" }}  />\r\n//                     <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">{item.subcategoryname}</h5>\r\n\r\n\r\n//                         <h5 className=\"card-title\">{item.smallsubcategoryname}</h5>\r\n//                         <h5 className=\"card-text\">{item.Price}</h5>\r\n//                         <div className=\"mb-0 d-flex  \">\r\n//                             {/* <Link to={`/blogdetail/${item._id}`} className=\"btn btn-primary btn-sm\">\r\n                            \r\n//                                 Read More\r\n//                             </Link> */}\r\n//                             <button className=\"btn btn-danger btn-sm\" onClick={() => handleShow(item._id)}>\r\n//                                 Remove\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         ))}\r\n//     </div>\r\n//     {/* Delete Confirmation Modal */}\r\n//     <Modal show={show} onHide={() => setShow(false)}>\r\n//                 <Modal.Header closeButton>\r\n//                     <Modal.Title>Confirm Delete</Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body>Are you sure you want to delete this item?</Modal.Body>\r\n//                 <Modal.Footer>\r\n//                     <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n//                         Cancel\r\n//                     </Button>\r\n//                     <Button variant=\"danger\" onClick={deleteItem}>\r\n//                         Delete\r\n//                     </Button>\r\n//                 </Modal.Footer>\r\n//             </Modal>\r\n        \r\n// </div>\r\n\r\n//   )\r\n// }\r\n\r\n\r\n// export default ViewAddtocart;\r\n\r\n\r\n\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { Link,useNavigate } from \"react-router-dom\";\r\n\r\n// const ViewAddtocart = () => {\r\n//   const [cart, setCart] = useState([]);\r\n//   const [cartcount, setcartcount] = useState(0); // Initialize cartcount state\r\n//   const [orderplaced,setorderplaced]=useState(false);\r\n//   const [deliveryPreference, setDeliveryPreference] = useState(\"normal\");\r\n//   const navigate = useNavigate();\r\n\r\n\r\n\r\n//   // useEffect(() => {\r\n//   //   const storedCart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n//   //   setCart(storedCart);\r\n//   // }, []);\r\n\r\n//   // const updateCart = (updatedCart) => {\r\n//   //   setCart(updatedCart);\r\n//   //   localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n//   // };\r\n\r\n//   // replace\r\n//   const email = localStorage.getItem(\"Email\") || \"guest\";\r\n\r\n  \r\n\r\n// useEffect(() => {\r\n//   const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n//   setCart(storedCart);\r\n// }, [email]);\r\n\r\n// const updateCart = (updatedCart) => {\r\n//   setCart(updatedCart);\r\n//   localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n//   localStorage.setItem(\"cartcount\", updatedCart.length);\r\n//   window.dispatchEvent(new Event(\"storage\"));\r\n// };\r\n\r\n\r\n//   const handleIncreaseQuantity = (index) => {\r\n//     const updatedCart = cart.map((item, i) =>\r\n//       i === index\r\n//         ? { ...item, quantity: item.quantity + 1, Price: (item.quantity + 1) * (item.Price / item.quantity) }\r\n//         : item\r\n//     );\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n\r\n\r\n\r\n// const handleDecreaseQuantity = (index) => {\r\n//     const updatedCart = cart\r\n//       .map((item, i) => {\r\n//         if (i === index) {\r\n//           const newQuantity = item.quantity - 1;\r\n//           if (newQuantity === 0) return null; // Mark for removal\r\n//           return { \r\n//             ...item, \r\n//             quantity: newQuantity, \r\n//             Price: (newQuantity * (item.Price / item.quantity)).toFixed(2) \r\n//           };\r\n//         }\r\n//         return item;\r\n//       })\r\n//       .filter(item => item !== null); // Remove items marked as null\r\n  \r\n//     updateCart(updatedCart);\r\n\r\n//     const newCartCount = updatedCart.length;  // Calculate cart count based on updatedCart length\r\n//     setcartcount(newCartCount);\r\n\r\n//     // Store updated cart and cart count in localStorage\r\n//     localStorage.setItem(\"cart\", JSON.stringify(updatedCart));\r\n//     localStorage.setItem(\"cartcount\", newCartCount);\r\n\r\n//     window.dispatchEvent(new Event(\"storage\"));\r\n\r\n//   };\r\n  \r\n//   const handleRemoveItem = (index) => {\r\n//     const updatedCart = cart.filter((_, i) => i !== index);\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   const handlePlaceOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n  \r\n//     if (!userId || cart.length === 0) {\r\n//       alert(\"Invalid order data. Please log in and add items.\");\r\n//       return;\r\n//     }\r\n//     const extracharge=deliveryPreference===\"Fast\"? 50 :0;\r\n//     const finalAmount=parseFloat(totalAmount)+extracharge;\r\n    \r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5001/api/orderplaced\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           userId,\r\n//           cartItems: cart,\r\n//           totalAmount:finalAmount,\r\n//           deliveryPreference, // <== ADD THIS LINE\r\n//           userEmail:localStorage.getItem(\"Email\"),\r\n//         }),\r\n//       });\r\n  \r\n//       const data = await response.json();\r\n  \r\n//       if (response.status === 201) {\r\n//         alert(data.message);\r\n//         // Reset cart\r\n//         localStorage.removeItem(`cart_${email}`);\r\n//         localStorage.setItem(\"cartcount\", 0);\r\n//         setCart([]);\r\n//         setcartcount(0);\r\n//         setorderplaced(true);\r\n//         window.dispatchEvent(new Event(\"storage\"));\r\n//       } else {\r\n//         alert(data.message || \"Order not placed\");\r\n//       }\r\n//     } catch (error) {\r\n//       alert(\"Something went wrong. Please try again.\");\r\n//       console.error(\"Order placement error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   // const placeOrder = async () => {\r\n//   //   const userId = localStorage.getItem(\"USER\");\r\n//   //   navigate(`/Checkout/${userId}`);\r\n   \r\n//   // };\r\n//   const placeOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n//     navigate(`/Checkout/${userId}`, {\r\n//       state: {\r\n//         deliveryPreference,\r\n//         totalAmount: parseFloat(totalAmount),\r\n//         finalAmount: parseFloat(totalAmount) + (deliveryPreference === \"Fast\" ? 50 : 0)\r\n//       }\r\n//     });\r\n//   };\r\n  \r\n\r\n//   const totalAmount= cart\r\n//   .reduce((acc, item) => acc + Number(item.Price), 0)\r\n//   .toFixed(2);\r\n\r\n//   return (\r\n//     // <div className=\"container my-5\">\r\n//     //   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n//     //   {cart.length === 0 ? (\r\n//     //     <p className=\"text-center\">Your cart is empty.</p>\r\n//     //   ) : (\r\n//     //     <div className=\"row\">\r\n//     //       {cart.map((item, index) => (\r\n//     //         <div key={index} className=\"col-md-4 mb-4\">\r\n//     //           <div className=\"card\">\r\n//     //             <img src={item.image} className=\"card-img-top\" alt={item.name} />\r\n//     //             <div className=\"card-body\">\r\n//     //               <h5>{item.name}</h5>\r\n//     //               <p>Price: ₹{item.Price}</p>\r\n//     //               <p>Quantity: {item.quantity}</p>\r\n                  \r\n//     //               <div className=\"d-flex justify-content-between\">\r\n//     //                 <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\r\n//     //                 <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\r\n//     //                 <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\r\n//     //               </div>\r\n//     //             </div>\r\n//     //           </div>\r\n//     //         </div>\r\n//     //       ))}\r\n          \r\n//     //     </div>\r\n        \r\n//     //   )}\r\n//     // </div>\r\n\r\n// //     <div className=\"container my-5\">\r\n// //   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n// //   {cart.length === 0 ? (\r\n// //     <p className=\"text-center\">Your cart is empty.</p>\r\n// //   ) : (\r\n// //     <div className=\"row\">\r\n      \r\n\r\n// //       {/* t Column: Cart Items */}\r\n// //       <div className=\"col-md-8\">\r\n// //         <div className=\"row\">\r\n// //           {cart.map((item, index) => (\r\n// //             <div key={index} className=\"col-md-6 mb-4\">\r\n// //               <div className=\"card\">\r\n// //                 <img src={item.image} className=\"card-img-top\" alt={item.name} />\r\n// //                 <div className=\"card-body\">\r\n// //                   <h5>{item.name}</h5>\r\n// //                   <p>Price: ₹{item.Price}</p>\r\n// //                   <p>Quantity: {item.quantity}</p>\r\n\r\n// //                   <div className=\"d-flex justify-content-between\">\r\n// //                     <button className=\"btn btn-sm btn-success\" onClick={() => handleIncreaseQuantity(index)}>+</button>\r\n// //                     <button className=\"btn btn-sm btn-warning\" onClick={() => handleDecreaseQuantity(index)}>-</button>\r\n// //                     <button className=\"btn btn-sm btn-danger\" onClick={() => handleRemoveItem(index)}>Remove</button>\r\n// //                   </div>\r\n// //                 </div>\r\n// //               </div>\r\n// //             </div>\r\n// //           ))}\r\n// //         </div>\r\n// //       </div>\r\n\r\n// //       {/* right Column: Cart Summary */}\r\n      \r\n// // <div className=\"col-md-4 mb-4\">\r\n// //   <div className=\"card p-3\">\r\n// //     <h5 className=\"mb-3\">Cart Summary</h5>\r\n// //     <ul className=\"list-group mb-3\">\r\n// //       {cart.map((item, index) => (\r\n// //         <li key={index} className=\"list-group-item d-flex justify-content-between\">\r\n// //           <span>{item.name} </span>\r\n// //           <span>₹{Number(item.Price).toFixed(2)}</span>\r\n// //         </li>\r\n// //       ))}\r\n// //     </ul>\r\n// //     {/* <h6 className=\"text-end\">\r\n// //       Total: ₹{new Intl.NumberFormat('en-IN', { minimumFractionDigits: 2 }).format(\r\n// //         cart.reduce((acc, item) => acc + Number(item.Price), 0)\r\n// //       )}\r\n// //     </h6> */}\r\n// //     <h6 className=\"text-end\">\r\n// //   Total: ₹{cart.reduce((acc, item) => acc + Number(item.Price), 0).toFixed(2)}\r\n// // </h6>\r\n\r\n// //   </div>\r\n// // </div>\r\n\r\n// //     </div>\r\n// //   )}\r\n// // </div>\r\n\r\n// <div className=\"container my-5\">\r\n//   <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n\r\n//   {cart.length === 0 ? (\r\n//   <div className=\"text-center\">\r\n//   <p>{orderplaced ? \"Your order is placed.\" : \"Your cart is empty.\"}</p>\r\n//   <Link\r\n//     to=\"/past-orders\" \r\n//     className=\"btn btn-primary mt-2\"\r\n//     style={{ textDecoration: \"none\" }}\r\n//   >\r\n//     View Past Orders\r\n//   </Link>\r\n// </div>\r\n\r\n  \r\n// ) : (\r\n\r\n//     <div className=\"row\">\r\n//       {/* Left Column: Cart Items */}\r\n//       <div className=\"col-md-8\">\r\n//         {cart.map((item, index) => (\r\n//           <div key={index} className=\"d-flex mb-4 border rounded p-3 shadow-sm\">\r\n//             {/* Image */}\r\n//             <img\r\n//               src={item.image}\r\n//               alt={item.name}\r\n//               className=\"img-fluid rounded\"\r\n//               style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n//             />\r\n\r\n//             {/* Details */}\r\n//             <div className=\"ms-3 flex-grow-1\">\r\n//               <h5>{item.name}</h5>\r\n//               <p className=\"mb-1\">Price: ₹{Number(item.Price).toFixed(2)}</p>\r\n//               <p className=\"mb-2\">Quantity: {item.quantity}</p>\r\n\r\n             \r\n\r\n// <div style={{ display: \"flex\", alignItems: \"center\", gap: \"12px\" }}>\r\n//   <button\r\n//     style={{\r\n//       width: \"32px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       backgroundColor: \"#fff\",\r\n//       color: \"#333\",\r\n//       fontSize: \"18px\",\r\n//       fontWeight: \"bold\",\r\n//       borderRadius: \"50%\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       cursor: \"pointer\",\r\n//     }}\r\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\r\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\r\n//     onClick={() => handleDecreaseQuantity(index)}\r\n//   >\r\n//     −\r\n//   </button>\r\n\r\n//   <div\r\n//     style={{\r\n//       width: \"40px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       textAlign: \"center\",\r\n//       lineHeight: \"30px\",\r\n//       borderRadius: \"4px\",\r\n//       fontWeight: \"500\",\r\n//     }}\r\n//   >\r\n//     {item.quantity}\r\n//   </div>\r\n\r\n//   <button\r\n//     style={{\r\n//       width: \"32px\",\r\n//       height: \"32px\",\r\n//       border: \"1px solid #c2c2c2\",\r\n//       backgroundColor: \"#fff\",\r\n//       color: \"#333\",\r\n//       fontSize: \"18px\",\r\n//       fontWeight: \"bold\",\r\n//       borderRadius: \"50%\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       justifyContent: \"center\",\r\n//       cursor: \"pointer\",\r\n//     }}\r\n//     onMouseOver={(e) => (e.target.style.backgroundColor = \"#f8f8f8\")}\r\n//     onMouseOut={(e) => (e.target.style.backgroundColor = \"#fff\")}\r\n//     onClick={() => handleIncreaseQuantity(index)}\r\n//   >\r\n//     +\r\n//   </button>\r\n\r\n//   <button\r\n//     className=\"btn btn-sm btn-danger ms-3\"\r\n//     onClick={() => handleRemoveItem(index)}\r\n//   >\r\n//     Remove\r\n//   </button>\r\n// </div>\r\n\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Right Column: Cart Summary */}\r\n//       <div className=\"col-md-4 mb-4\">\r\n//         <div className=\"card p-3 shadow-sm\">\r\n//           <h5 className=\"mb-3\">Cart Summary</h5>\r\n//           <ul className=\"list-group mb-3\">\r\n//             {cart.map((item, index) => (\r\n//               <li\r\n//                 key={index}\r\n//                 className=\"list-group-item d-flex justify-content-between\"\r\n//               >\r\n//                 <span>{item.name}</span>\r\n//                 <span>₹{Number(item.Price).toFixed(2)}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n\r\n          \r\n\r\n//           <div className=\"mb-3\">\r\n//   <label htmlFor=\"deliveryPreference\" className=\"form-label\">\r\n//     Delivery Preference\r\n//   </label>\r\n//   <select\r\n//     id=\"deliveryPreference\"\r\n//     className=\"form-select\"\r\n//     value={deliveryPreference}\r\n//     onChange={(e) => setDeliveryPreference(e.target.value)}\r\n//   >\r\n//     <option value=\"normal\">Normal (Free,7 Days)</option>\r\n//     <option value=\"Fast\">Fast (Rs.50, 2 Days)</option>\r\n//   </select>\r\n// </div>\r\n// <h6 className=\"text-end\">\r\n//             Total: ₹\r\n//             {(parseFloat(totalAmount)+(deliveryPreference===\"Fast\"?50:0)).toFixed(2)}\r\n//           </h6>\r\n\r\n//           <button\r\n//     style={{\r\n//       width: \"100%\",\r\n//       backgroundColor: \"#fb641b\",\r\n//       color: \"#fff\",\r\n//       border: \"none\",\r\n//       borderRadius: \"2px\",\r\n//       padding: \"12px 0\",\r\n//       fontSize: \"16px\",\r\n//       fontWeight: \"bold\",\r\n//       boxShadow: \"0 1px 2px 0 rgba(0, 0, 0, 0.2)\",\r\n//       cursor: \"pointer\",\r\n//       marginTop: \"16px\"\r\n//     }}\r\n//     // onClick={handlePlaceOrder}\r\n//     onClick={placeOrder}\r\n//   >\r\n//     PLACE ORDER\r\n//   </button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n\r\n//   );\r\n// };\r\n\r\n// export default ViewAddtocart;\r\n// import { useEffect, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Addtocart.css\";\r\n// import api from \"../axios\";\r\n\r\n// const ViewAddtocart = () => {\r\n  \r\n//   const [cart, setCart] = useState([]);\r\n//   const [cartcount, setCartcount] = useState(0);\r\n//   const [orderplaced, setOrderPlaced] = useState(false);\r\n//   const [deliveryType, setDeliveryType] = useState(\"\");\r\n//   const [address, setAddress] = useState(\"\");\r\n//   const [city, setCity] = useState(\"\");\r\n//   const [pincode, setPincode] = useState(\"\");\r\n//   const [step, setStep] = useState(0);\r\n\r\n//   const navigate = useNavigate();\r\n//   const email = localStorage.getItem(\"EMAIL\") || \"guest\";\r\n\r\n//   // Ensure the user is logged in and is not an admin\r\n//   useEffect(() => {\r\n//     const user = localStorage.getItem(\"USER\");\r\n//     const role = localStorage.getItem(\"Role\");\r\n\r\n//     if (!user || role === \"admin\") {\r\n//       console.log(\"Role in localStorage:\", role);  // Debugging: Check the role\r\n//       alert(\"Access denied! Please login as a valid user.\");\r\n//       navigate(\"/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   // Load cart from localStorage on initial render\r\n//   useEffect(() => {\r\n//     const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n//     console.log(\"Loaded cart from localStorage:\", storedCart); // 👀 Debug\r\n\r\n//     setCart(storedCart);\r\n//     setCartcount(storedCart.length);\r\n//   }, [email]);\r\n\r\n//   // Function to update cart state and localStorage\r\n//   const updateCart = (updatedCart) => {\r\n//     setCart(updatedCart);\r\n//     setCartcount(updatedCart.length);\r\n//     localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n//     localStorage.setItem(\"cartcount\", updatedCart.length);\r\n//     window.dispatchEvent(new Event(\"storage\"));\r\n//   };\r\n\r\n//   // Function to increase item quantity\r\n//   const handleIncreaseQuantity = (index) => {\r\n//     const updatedCart = cart.map((item, i) =>\r\n//       i === index\r\n//         ? {\r\n//             ...item,\r\n//             quantity: item.quantity + 1,\r\n//             Price: (item.unitPrice * (item.quantity + 1)).toFixed(2),\r\n//           }\r\n//         : item\r\n//     );\r\n//     updateCart(updatedCart);\r\n//   };\r\n  \r\n//   const handleDecreaseQuantity = (index) => {\r\n//     const updatedCart = cart\r\n//       .map((item, i) => {\r\n//         if (i === index) {\r\n//           const newQuantity = item.quantity - 1;\r\n//           if (newQuantity === 0) return null;\r\n//           return {\r\n//             ...item,\r\n//             quantity: newQuantity,\r\n//             Price: (item.unitPrice * newQuantity).toFixed(2),\r\n//           };\r\n//         }\r\n//         return item;\r\n//       })\r\n//       .filter((item) => item !== null);\r\n//     updateCart(updatedCart);\r\n//   };\r\n//     // Function to remove item from cart\r\n//   const handleRemoveItem = (index) => {\r\n//     const updatedCart = cart.filter((_, i) => i !== index);\r\n//     updateCart(updatedCart);\r\n//   };\r\n\r\n//   // Calculate total amount of the cart\r\n//   const totalAmount = cart\r\n//     .reduce((total, item) => total + parseFloat(item.Price), 0)\r\n//     .toFixed(2);\r\n\r\n//   // Add extra charges for fast delivery\r\n//   const extracharge = deliveryType === \"Fast\" ? 50 : 0;\r\n//   const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\r\n\r\n//   // Handle placing the order\r\n//   const handlePlaceOrder = async () => {\r\n//     const userId = localStorage.getItem(\"USER\");\r\n  \r\n//     if (!userId || cart.length === 0) {\r\n//       alert(\"Invalid order data. Please log in and add items.\");\r\n//       return;\r\n//     }\r\n  \r\n//     if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\r\n//       alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\r\n//       return;\r\n//     }\r\n  \r\n//     try {\r\n//       const response = await api.post(\"/orders\", {\r\n//         userId,\r\n//         cartItems: cart,\r\n//         totalAmount: totalAmountWithDelivery,\r\n//         pincode,\r\n//         address,\r\n//         city,\r\n//         serviceDate: new Date(),\r\n//         deliveryType,\r\n//         userEmail: email,\r\n//       });\r\n  \r\n//       const orderData = response.data.order; // ✅ FIXED HERE\r\n  \r\n//       if (response.status === 201 && orderData._id) {\r\n//         const options = {\r\n//           key: \"rzp_test_99IwqPHWTFKkXS\", // ✅ Use real Razorpay key in production\r\n//           amount: parseFloat(totalAmountWithDelivery) * 100, // amount in paise\r\n//           currency: \"INR\",\r\n//           name: \"Softwizz\",\r\n//           description: \"Order Payment\",\r\n//           handler: async function (razorpayResponse) {\r\n//             try {\r\n//               const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\r\n//                 paymentId: razorpayResponse.razorpay_payment_id,\r\n//                 paymentStatus: \"Paid\",\r\n//               });\r\n  \r\n//               if (paymentRes.status === 200) {\r\n//                 alert(\"Payment Successful!\");\r\n//                 localStorage.removeItem(`cart_${email}`);\r\n//                 localStorage.setItem(\"cartcount\", 0);\r\n//                 setCart([]);\r\n//                 setCartcount(0);\r\n//                 setOrderPlaced(true);\r\n//                 window.dispatchEvent(new Event(\"storage\"));\r\n//                 navigate(\"/\"); // ✅ Optionally redirect to a Thank You page\r\n//               } else {\r\n//                 alert(\"Payment captured but failed to update order.\");\r\n//               }\r\n//             } catch (err) {\r\n//               console.error(\"Payment update failed:\", err);\r\n//               alert(\"Payment succeeded but order update failed.\");\r\n//             }\r\n//           },\r\n//           prefill: {\r\n//             name: address,\r\n//             email: email,\r\n//             contact: \"9999999999\", // Optional\r\n//           },\r\n//           theme: {\r\n//             color: \"#3399cc\",\r\n//           },\r\n//         };\r\n  \r\n//         const rzp = new window.Razorpay(options);\r\n//         rzp.open();\r\n//       } else {\r\n//         alert(\"Failed to create order. Try again.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Order placement error:\", error);\r\n//       alert(\"Something went wrong. Please try again.\");\r\n//     }\r\n//   };\r\n//       return (\r\n//     <div className=\"addtocart-container py-5\">\r\n//       {/* Step Indicators */}\r\n//       <div className=\"checkout-steps mb-4\">\r\n//         {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\r\n//           <div\r\n//             key={idx}\r\n//             className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\r\n//           >\r\n//             <div className=\"step-circle\">{idx + 1}</div>\r\n//             <div className=\"step-label\">{label}</div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Step 0 - Cart */}\r\n//       {step === 0 && (\r\n//         <div className=\"row\">\r\n//           <div className=\"col-md-8\">\r\n//             <h4>Your Cart</h4>\r\n//             <div className=\"row\">\r\n//               {cart.map((item, index) => (\r\n//                 <div key={index} className=\"col-md-6 mb-4\">\r\n//                   <div className=\"card cart-card shadow-sm\">\r\n//                     <img\r\n//                       src={item.image}\r\n//                       className=\"card-img-top\"\r\n//                       style={{ height: \"180px\", objectFit: \"cover\" }}\r\n//                     />\r\n//                     <div className=\"card-body\">\r\n//                       <h5 className=\"card-title\">{item.name}</h5>\r\n//                       <p className=\"card-text\">\r\n//                         ₹{item.Price} × {item.quantity}\r\n//                       </p>\r\n//                       <div className=\"d-flex justify-content-between\">\r\n//                         <button\r\n//                           className=\"btn btn-success btn-sm\"\r\n//                           onClick={() => handleIncreaseQuantity(index)}\r\n//                         >\r\n//                           +\r\n//                         </button>\r\n//                         <button\r\n//                           className=\"btn btn-warning btn-sm text-white\"\r\n//                           onClick={() => handleDecreaseQuantity(index)}\r\n//                         >\r\n//                           -\r\n//                         </button>\r\n//                         <button\r\n//                           className=\"btn btn-danger btn-sm\"\r\n//                           onClick={() => handleRemoveItem(index)}\r\n//                         >\r\n//                           Remove\r\n//                         </button>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"col-md-4\">\r\n//             <div className=\"card p-3\">\r\n//               <h5>Order Summary</h5>\r\n//               <ul className=\"list-group list-group-flush\">\r\n//                 {cart.map((item, idx) => (\r\n//                   <li key={idx} className=\"list-group-item d-flex justify-content-between\">\r\n//                     <span>{item.name} × {item.quantity}</span>\r\n//                     {/* <span>₹{item.Price}</span> */}\r\n//                     <span>₹{Number(item.Price).toFixed(2)}</span>\r\n//                   </li>\r\n//                 ))}\r\n//                 <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\r\n//                   <span>Total</span>\r\n//                   <span>₹{totalAmount}</span>\r\n//                 </li>\r\n//               </ul>\r\n//               <button\r\n//                 className=\"btn btn-primary mt-3 w-100\"\r\n//                 disabled={cart.length === 0}\r\n//                 onClick={() => setStep(1)}\r\n//               >\r\n//                 Continue\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Step 1 - Address */}\r\n//       {step === 1 && (\r\n//         <div className=\"row justify-content-center\">\r\n//           <div className=\"col-md-6\">\r\n//             <h4>Delivery Address</h4>\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"Address\"\r\n//               value={address}\r\n//               onChange={(e) => setAddress(e.target.value)}\r\n//             />\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"City\"\r\n//               value={city}\r\n//               onChange={(e) => setCity(e.target.value)}\r\n//             />\r\n//             <input\r\n//               className=\"form-control my-2\"\r\n//               placeholder=\"Pincode\"\r\n//               value={pincode}\r\n//               onChange={(e) => setPincode(e.target.value)}\r\n//             />\r\n//             <select\r\n//               className=\"form-control my-2\"\r\n//               value={deliveryType}\r\n//               onChange={(e) => setDeliveryType(e.target.value)}\r\n//             >\r\n//               <option value=\"\">Select Delivery Type</option>\r\n//               <option value=\"Fast\">Fast (₹50, 2 Days)</option>\r\n//               <option value=\"Slow\">Normal (Free, 4 Days)</option>\r\n//             </select>\r\n\r\n//             <button\r\n//               className=\"btn btn-primary w-100\"\r\n//               onClick={() => {\r\n//                 if (address && city && pincode && deliveryType) {\r\n//                   setStep(2);\r\n//                 } else {\r\n//                   alert(\"Please fill all fields!\");\r\n//                 }\r\n//               }}\r\n//             >\r\n//               Continue to Payment\r\n//             </button>\r\n\r\n//             <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\r\n//               Back to Cart\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Step 2 - Payment */}\r\n//       {step === 2 && (\r\n//         <div className=\"text-center\">\r\n//           <h4>Payment</h4>\r\n//           <p>Simulated payment method (Cash/UPI etc)</p>\r\n//           <button className=\"btn btn-dark\" onClick={() => setStep(3)}>\r\n//             Continue to Summary\r\n//           </button>\r\n//           <br />\r\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\r\n//             Back to Address\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Step 3 - Summary */}\r\n//       {step === 3 && (\r\n//         <div className=\"text-center\">\r\n//           <h4>Order Summary</h4>\r\n//           <p>Total: ₹{totalAmountWithDelivery}</p>\r\n//           <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\r\n//             Place Order\r\n//           </button>\r\n//           <br />\r\n//           <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\r\n//             Back to Payment\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewAddtocart;\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Addtocart.css\";\r\nimport api from \"../axios\";\r\n\r\nconst ViewAddtocart = () => {\r\n  \r\n  const [cart, setCart] = useState([]);\r\n  const [cartcount, setCartcount] = useState(0);\r\n  const [orderplaced, setOrderPlaced] = useState(false);\r\n  const [deliveryType, setDeliveryType] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [pincode, setPincode] = useState(\"\");\r\n  const [step, setStep] = useState(0);\r\n\r\n  const navigate = useNavigate();\r\n  const email = localStorage.getItem(\"EMAIL\") || \"guest\";\r\n\r\n  // Ensure the user is logged in and is not an admin\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"USER\");\r\n    const role = localStorage.getItem(\"Role\");\r\n\r\n    if (!user || role === \"admin\") {\r\n      console.log(\"Role in localStorage:\", role);  // Debugging: Check the role\r\n      alert(\"Access denied! Please login as a valid user.\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Load cart from localStorage on initial render\r\n  useEffect(() => {\r\n    const storedCart = JSON.parse(localStorage.getItem(`cart_${email}`)) || [];\r\n    setCart(storedCart);\r\n    setCartcount(storedCart.length);\r\n  }, [email]);\r\n\r\n  // Function to update cart state and localStorage\r\n  const updateCart = (updatedCart) => {\r\n    setCart(updatedCart);\r\n    setCartcount(updatedCart.length);\r\n    localStorage.setItem(`cart_${email}`, JSON.stringify(updatedCart));\r\n    localStorage.setItem(\"cartcount\", updatedCart.length);\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n  };\r\n\r\n  // Function to increase item quantity\r\n  const handleIncreaseQuantity = (index) => {\r\n    const updatedCart = cart.map((item, i) =>\r\n      i === index\r\n        ? {\r\n            ...item,\r\n            quantity: item.quantity + 1,\r\n            price: ((item.quantity + 1) * (item.price / item.quantity)).toFixed(2),\r\n          }\r\n        : item\r\n    );\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  // Function to decrease item quantity\r\n  const handleDecreaseQuantity = (index) => {\r\n    const updatedCart = cart\r\n      .map((item, i) => {\r\n        if (i === index) {\r\n          const newQuantity = item.quantity - 1;\r\n          if (newQuantity === 0) return null;\r\n          return {\r\n            ...item,\r\n            quantity: newQuantity,\r\n            price: ((item.price / item.quantity) * newQuantity).toFixed(2),\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n      .filter((item) => item !== null);\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  // Function to remove item from cart\r\n  const handleRemoveItem = (index) => {\r\n    const updatedCart = cart.filter((_, i) => i !== index);\r\n    updateCart(updatedCart);\r\n  };\r\n\r\n  // Calculate total amount of the cart\r\n  const totalAmount = cart\r\n    .reduce((total, item) => total + parseFloat(item.price), 0)\r\n    .toFixed(2);\r\n\r\n  // Add extra charges for fast delivery\r\n  const extracharge = deliveryType === \"Fast\" ? 50 : 0;\r\n  const totalAmountWithDelivery = (parseFloat(totalAmount) + extracharge).toFixed(2);\r\n\r\n  // Handle placing the order\r\n  const handlePlaceOrder = async () => {\r\n    const userId = localStorage.getItem(\"USER\");\r\n  \r\n    if (!userId || cart.length === 0) {\r\n      alert(\"Invalid order data. Please log in and add items.\");\r\n      return;\r\n    }\r\n  \r\n    if (!address.trim() || !city.trim() || !pincode.trim() || !deliveryType) {\r\n      alert(\"Please fill all delivery details (address, city, pincode, delivery type).\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const response = await api.post(\"/orders\", {\r\n        userId,\r\n        cartItems: cart,\r\n        totalAmount: totalAmountWithDelivery,\r\n        pincode,\r\n        address,\r\n        city,\r\n        serviceDate: new Date(),\r\n        deliveryType,\r\n        userEmail: email,\r\n      });\r\n  \r\n      const orderData = response.data.order; // ✅ FIXED HERE\r\n  \r\n      if (response.status === 201 && orderData._id) {\r\n        const options = {\r\n          key: \"rzp_test_99IwqPHWTFKkXS\", // ✅ Use real Razorpay key in production\r\n          amount: parseFloat(totalAmountWithDelivery) * 100, // amount in paise\r\n          currency: \"INR\",\r\n          name: \"Softwizz\",\r\n          description: \"Order Payment\",\r\n          handler: async function (razorpayResponse) {\r\n            try {\r\n              const paymentRes = await api.put(`/updatepayment/${orderData._id}`, {\r\n                paymentId: razorpayResponse.razorpay_payment_id,\r\n                paymentStatus: \"Paid\",\r\n              });\r\n  \r\n              if (paymentRes.status === 200) {\r\n                alert(\"Payment Successful!\");\r\n                localStorage.removeItem(`cart_${email}`);\r\n                localStorage.setItem(\"cartcount\", 0);\r\n                setCart([]);\r\n                setCartcount(0);\r\n                setOrderPlaced(true);\r\n                window.dispatchEvent(new Event(\"storage\"));\r\n                navigate(\"/my-orders\"); // ✅ Optionally redirect to a Thank You page\r\n              } else {\r\n                alert(\"Payment captured but failed to update order.\");\r\n              }\r\n            } catch (err) {\r\n              console.error(\"Payment update failed:\", err);\r\n              alert(\"Payment succeeded but order update failed.\");\r\n            }\r\n          },\r\n          prefill: {\r\n            name: address,\r\n            email: email,\r\n            contact: \"9999999999\", // Optional\r\n          },\r\n          theme: {\r\n            color: \"#3399cc\",\r\n          },\r\n        };\r\n  \r\n        const rzp = new window.Razorpay(options);\r\n        rzp.open();\r\n      } else {\r\n        alert(\"Failed to create order. Try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Order placement error:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n      return (\r\n    <div className=\"addtocart-container py-5\">\r\n      {/* Step Indicators */}\r\n      <div className=\"checkout-steps mb-4\">\r\n        {[\"Cart\", \"Address\", \"Payment\", \"Summary\"].map((label, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`step ${step === idx ? \"active\" : step > idx ? \"completed\" : \"\"}`}\r\n          >\r\n            <div className=\"step-circle\">{idx + 1}</div>\r\n            <div className=\"step-label\">{label}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Step 0 - Cart */}\r\n      {step === 0 && (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8\">\r\n            <h4>Your Cart</h4>\r\n            <div className=\"row\">\r\n              {cart.map((item, index) => (\r\n                <div key={index} className=\"col-md-6 mb-4\">\r\n                  <div className=\"card cart-card shadow-sm\">\r\n                    <img\r\n                      src={item.image}\r\n                      className=\"card-img-top\"\r\n                      style={{ height: \"180px\", objectFit: \"cover\" }}\r\n                    />\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title\">{item.name}</h5>\r\n                      <p className=\"card-text\">\r\n                        ₹{item.price} × {item.quantity}\r\n                      </p>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <button\r\n                          className=\"btn btn-success btn-sm\"\r\n                          onClick={() => handleIncreaseQuantity(index)}\r\n                        >\r\n                          +\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-warning btn-sm text-white\"\r\n                          onClick={() => handleDecreaseQuantity(index)}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={() => handleRemoveItem(index)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card p-3\">\r\n              <h5>Order Summary</h5>\r\n              <ul className=\"list-group list-group-flush\">\r\n                {cart.map((item, idx) => (\r\n                  <li key={idx} className=\"list-group-item d-flex justify-content-between\">\r\n                    <span>{item.name} × {item.quantity}</span>\r\n                    <span>₹{item.price}</span>\r\n                  </li>\r\n                ))}\r\n                <li className=\"list-group-item fw-bold d-flex justify-content-between border-top\">\r\n                  <span>Total</span>\r\n                  <span>₹{totalAmount}</span>\r\n                </li>\r\n              </ul>\r\n              <button\r\n                className=\"btn btn-primary mt-3 w-100\"\r\n                disabled={cart.length === 0}\r\n                onClick={() => setStep(1)}\r\n              >\r\n                Continue\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 1 - Address */}\r\n      {step === 1 && (\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6\">\r\n            <h4>Delivery Address</h4>\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"City\"\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n            <input\r\n              className=\"form-control my-2\"\r\n              placeholder=\"Pincode\"\r\n              value={pincode}\r\n              onChange={(e) => setPincode(e.target.value)}\r\n            />\r\n            <select\r\n              className=\"form-control my-2\"\r\n              value={deliveryType}\r\n              onChange={(e) => setDeliveryType(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Delivery Type</option>\r\n              <option value=\"Fast\">Fast (₹50, 2 Days)</option>\r\n              <option value=\"Slow\">Normal (Free, 4 Days)</option>\r\n            </select>\r\n\r\n            <button\r\n              className=\"btn btn-primary w-100\"\r\n              onClick={() => {\r\n                if (address && city && pincode && deliveryType) {\r\n                  setStep(2);\r\n                } else {\r\n                  alert(\"Please fill all fields!\");\r\n                }\r\n              }}\r\n            >\r\n              Continue to Payment\r\n            </button>\r\n\r\n            <button className=\"btn btn-secondary w-100 mt-2\" onClick={() => setStep(0)}>\r\n              Back to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 2 - Payment */}\r\n      {step === 2 && (\r\n        <div className=\"text-center\">\r\n          <h4>Payment</h4>\r\n          <p>Simulated payment method (Cash/UPI etc)</p>\r\n          <button className=\"btn btn-dark\" onClick={() => setStep(3)}>\r\n            Continue to Summary\r\n          </button>\r\n          <br />\r\n          <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(1)}>\r\n            Back to Address\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 3 - Summary */}\r\n{/* Step 3 - Summary */}\r\n{step === 3 && (\r\n  <div className=\"text-center\">\r\n    {!orderplaced ? (\r\n      <>\r\n        <h4>Order Summary</h4>\r\n        <p>Total: ₹{totalAmountWithDelivery}</p>\r\n        <button className=\"btn btn-success\" onClick={handlePlaceOrder}>\r\n          Place Order\r\n        </button>\r\n        <br />\r\n        <button className=\"btn btn-secondary mt-2\" onClick={() => setStep(2)}>\r\n          Back to Payment\r\n        </button>\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center success-message\">\r\n        <div className=\"success-icon\">✅</div>\r\n        <h2 className=\"text-success mt-3\">Payment Successful!</h2>\r\n        <p>Thank you for your order. A confirmation email has been sent.</p>\r\n        <button className=\"btn btn-primary mt-3\" onClick={() => navigate(\"/\")}>\r\n          Go to Home\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n)}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewAddtocart; \r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}