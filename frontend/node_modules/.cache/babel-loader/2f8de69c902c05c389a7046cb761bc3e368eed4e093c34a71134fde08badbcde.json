{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\components\\\\CheckOut.js\",\n  _s = $RefreshSig$();\n// import { useState, useContext } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// // import { CartContext } from './CartContext';\n\n// const Checkout = () => {\n// //   const { userId } = useParams();\n// const userId = localStorage.getItem(\"USER\");\n\n//   const [cartItems, setCartItems] = useState([]);\n\n// //   const { cartItems, clearCart } = useContext(CartContext);\n//   const navigate = useNavigate();\n\n//   const [address, setAddress] = useState({\n//     name: '',\n//     street: '',\n//     city: '',\n//     postalCode: '',\n//     country: ''\n//   });\n//   const clearCart = () => {\n//     setCartItems([]);\n//   };\n\n//   const handleChange = (e) => {\n//     setAddress({ ...address, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     console.log(\"Submit clicked âœ…\"); // ðŸ‘ˆ ye line lagao\n\n//     console.log(\"Cart Items:\", cartItems); // ðŸ‘ˆ Check this\n//     if (cartItems.length === 0) {\n//       alert(\"Cart is empty!\");\n//       return;\n//     }\n\n//     const totalAmount = cartItems.reduce((acc, item) => acc + (item.price * item.quantity), 0);\n//     const items = cartItems.map(item => ({\n//       productId: item._id,\n//       quantity: item.quantity\n//     }));\n\n//     // Step 1: Create Order\n//   const orderRes = await fetch('http://localhost:5001/placeorder', {\n//     method: 'POST',\n//     headers: { 'Content-Type': 'application/json' },\n//     body: JSON.stringify({ userId, items, shippingAddress: address, totalAmount })\n//   });\n\n//   const orderData = await orderRes.json();\n//   if (orderRes.ok) {\n//     // Step 2: Open Razorpay Payment Window\n//     const options = {\n//       key: 'rzp_test_99IwqPHWTFKkXS', // ðŸ”¥ Replace with your real Razorpay key\n//       amount: totalAmount * 100, // Amount in paise\n//       currency: \"INR\",\n//       name: \"Softwizz\",\n//       description: \"Order Payment\",\n//       handler: async function (response) {\n//         // Payment successful\n\n//         // Step 3: Update backend with payment success\n//         const paymentRes = await fetch(`http://localhost:5001/updatepayment/${orderData._id}`, {\n//           method: 'PUT',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify({\n//             paymentId: response.razorpay_payment_id,\n//             paymentStatus: 'Paid'\n//           })\n//         });\n\n//         if (paymentRes.ok) {\n//           alert('Payment Successful!');\n//           clearCart();\n//           navigate('/'); // or Thank You page\n//         } else {\n//           alert('Payment captured but failed to update order.');\n//         }\n//       },\n//       prefill: {\n//         name: address.name,\n//         email: 'user@example.com', // optional\n//         contact: '9999999999' // optional\n//       },\n//       theme: {\n//         color: \"#3399cc\"\n//       }\n//     };\n\n//     const rzp = new window.Razorpay(options);\n//     rzp.open();\n//   } else {\n//     alert('Failed to create order. Try again.');\n//   }\n// };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h2 className=\"mb-4\">Checkout</h2>\n//       <form className=\"row g-3\" onSubmit={handleSubmit}>\n//         <div className=\"col-md-6\">\n//           <label htmlFor=\"name\" className=\"form-label\">Full Name</label>\n//           <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange={handleChange} required />\n//         </div>\n\n//         <div className=\"col-12\">\n//           <label htmlFor=\"street\" className=\"form-label\">Street Address</label>\n//           <input type=\"text\" className=\"form-control\" id=\"street\" name=\"street\" onChange={handleChange} required />\n//         </div>\n\n//         <div className=\"col-md-6\">\n//           <label htmlFor=\"city\" className=\"form-label\">City</label>\n//           <input type=\"text\" className=\"form-control\" id=\"city\" name=\"city\" onChange={handleChange} required />\n//         </div>\n\n//         <div className=\"col-md-4\">\n//           <label htmlFor=\"postalCode\" className=\"form-label\">Postal Code</label>\n//           <input type=\"text\" className=\"form-control\" id=\"postalCode\" name=\"postalCode\" onChange={handleChange} required />\n//         </div>\n\n//         <div className=\"col-md-2\">\n//           <label htmlFor=\"country\" className=\"form-label\">Country</label>\n//           <input type=\"text\" className=\"form-control\" id=\"country\" name=\"country\" onChange={handleChange} required />\n//         </div>\n\n//         <div className=\"col-12\">\n//           <button type=\"submit\" className=\"btn btn-primary w-100\">Submit Order</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Checkout;\nimport { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkout = () => {\n  _s();\n  const location = useLocation();\n  const {\n    deliveryPreference,\n    totalAmount,\n    finalAmount\n  } = location.state || {};\n  const userId = localStorage.getItem(\"USER\"); // USER ID get karo\n  localStorage.setItem(\"cart_\" + userId, JSON.stringify(cartData)); // cart ko userId ke saath store karo\n\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [address, setAddress] = useState({\n    name: '',\n    street: '',\n    city: '',\n    postalCode: '',\n    country: ''\n  });\n  useEffect(() => {\n    const userId = localStorage.getItem(\"USER\"); // USER ID get karo\n    const storedCart = localStorage.getItem(\"cart_\" + userId); // cart ko userId ke saath fetch karo\n    const cartItems = storedCart ? JSON.parse(storedCart) : []; // agar cart hai to parse kar ke array banalo\n\n    if (storedCart) {\n      setCartItems(JSON.parse(storedCart));\n    }\n  }, []);\n\n  // âœ… Load cart from localStorage\n  useEffect(() => {\n    if (userId) {\n      const savedCart = localStorage.getItem(`cart_${userId}`);\n      if (savedCart) {\n        try {\n          setCartItems(JSON.parse(savedCart));\n        } catch (err) {\n          console.error(\"Failed to parse cart JSON\", err);\n        }\n      }\n    }\n  }, [userId]);\n\n  // const clearCart = () => {\n  //   localStorage.removeItem(`cart_${userId}`);\n  //   setCartItems([]);\n  // };\n  const clearCart = () => {\n    const userId = localStorage.getItem(\"USER\");\n    localStorage.removeItem(\"cart_\" + userId);\n    localStorage.setItem(\"cartcount\", 0);\n    window.dispatchEvent(new Event(\"storage\"));\n    setCartItems([]);\n  };\n  const handleChange = e => {\n    setAddress({\n      ...address,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Submit clicked âœ…\");\n    console.log(\"Cart Items:\", cartItems);\n    if (cartItems.length === 0) {\n      alert(\"Cart is empty!\");\n      return;\n    }\n    const totalAmount = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\n\n    // Step 1: Place order\n    // const orderRes = await fetch('http://localhost:5001/placeorder', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify({\n    //     userId,\n    //     cartItems, // sending full cartItems as per your Mongoose schema\n    //     shippingAddress: address,\n    //     totalAmount\n    //   })\n    // });\n\n    const orderRes = await fetch('http://localhost:5001/placeorder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userId,\n        cartItems,\n        shippingAddress: address,\n        deliveryPreference,\n        totalAmount: finalAmount\n      })\n    });\n    const orderData = await orderRes.json();\n    if (orderRes.ok) {\n      const options = {\n        key: 'rzp_test_99IwqPHWTFKkXS',\n        amount: finalAmount * 100,\n        currency: \"INR\",\n        name: \"Softwizz\",\n        description: \"Order Payment\",\n        handler: async function (response) {\n          const paymentRes = await fetch(`http://localhost:5001/updatepayment/${orderData._id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              paymentId: response.razorpay_payment_id,\n              paymentStatus: 'Paid'\n            })\n          });\n          if (paymentRes.ok) {\n            alert('Payment Successful!');\n            clearCart();\n            localStorage.setItem(\"cartcount\", 0);\n            window.dispatchEvent(new Event(\"storage\"));\n            navigate(\"/thankyou\"); // or redirect wherever you want\n          } else {\n            alert('Payment captured but failed to update order.');\n          }\n        },\n        prefill: {\n          name: address.name,\n          email: 'user@example.com',\n          contact: '9999999999'\n        },\n        theme: {\n          color: \"#3399cc\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } else {\n      alert('Failed to create order. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), cartItems.length > 0 ? cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product: \", item.productName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", item.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"row g-3\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          name: \"name\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          className: \"form-label\",\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"street\",\n          name: \"street\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          className: \"form-label\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"city\",\n          name: \"city\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postalCode\",\n          className: \"form-label\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"postalCode\",\n          name: \"postalCode\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"country\",\n          className: \"form-label\",\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"country\",\n          name: \"country\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100\",\n          children: \"Submit Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"gMOjM1ZH7eMye9D+UDQJHyc8dbI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useEffect","useState","useNavigate","useLocation","jsxDEV","_jsxDEV","Checkout","_s","location","deliveryPreference","totalAmount","finalAmount","state","userId","localStorage","getItem","setItem","JSON","stringify","cartData","navigate","cartItems","setCartItems","address","setAddress","name","street","city","postalCode","country","storedCart","parse","savedCart","err","console","error","clearCart","removeItem","window","dispatchEvent","Event","handleChange","e","target","value","handleSubmit","preventDefault","log","length","alert","reduce","acc","item","price","quantity","orderRes","fetch","method","headers","body","shippingAddress","orderData","json","ok","options","key","amount","currency","description","handler","response","paymentRes","_id","paymentId","razorpay_payment_id","paymentStatus","prefill","email","contact","theme","color","rzp","Razorpay","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","productName","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/components/CheckOut.js"],"sourcesContent":["// import { useState, useContext } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// // import { CartContext } from './CartContext';\r\n\r\n// const Checkout = () => {\r\n// //   const { userId } = useParams();\r\n// const userId = localStorage.getItem(\"USER\");\r\n\r\n//   const [cartItems, setCartItems] = useState([]);\r\n\r\n// //   const { cartItems, clearCart } = useContext(CartContext);\r\n//   const navigate = useNavigate();\r\n  \r\n//   const [address, setAddress] = useState({\r\n//     name: '',\r\n//     street: '',\r\n//     city: '',\r\n//     postalCode: '',\r\n//     country: ''\r\n//   });\r\n//   const clearCart = () => {\r\n//     setCartItems([]);\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setAddress({ ...address, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log(\"Submit clicked âœ…\"); // ðŸ‘ˆ ye line lagao\r\n\r\n\r\n//     console.log(\"Cart Items:\", cartItems); // ðŸ‘ˆ Check this\r\n//     if (cartItems.length === 0) {\r\n//       alert(\"Cart is empty!\");\r\n//       return;\r\n//     }\r\n  \r\n\r\n//     const totalAmount = cartItems.reduce((acc, item) => acc + (item.price * item.quantity), 0);\r\n//     const items = cartItems.map(item => ({\r\n//       productId: item._id,\r\n//       quantity: item.quantity\r\n//     }));\r\n\r\n//     // Step 1: Create Order\r\n//   const orderRes = await fetch('http://localhost:5001/placeorder', {\r\n//     method: 'POST',\r\n//     headers: { 'Content-Type': 'application/json' },\r\n//     body: JSON.stringify({ userId, items, shippingAddress: address, totalAmount })\r\n//   });\r\n\r\n//   const orderData = await orderRes.json();\r\n//   if (orderRes.ok) {\r\n//     // Step 2: Open Razorpay Payment Window\r\n//     const options = {\r\n//       key: 'rzp_test_99IwqPHWTFKkXS', // ðŸ”¥ Replace with your real Razorpay key\r\n//       amount: totalAmount * 100, // Amount in paise\r\n//       currency: \"INR\",\r\n//       name: \"Softwizz\",\r\n//       description: \"Order Payment\",\r\n//       handler: async function (response) {\r\n//         // Payment successful\r\n\r\n//         // Step 3: Update backend with payment success\r\n//         const paymentRes = await fetch(`http://localhost:5001/updatepayment/${orderData._id}`, {\r\n//           method: 'PUT',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify({\r\n//             paymentId: response.razorpay_payment_id,\r\n//             paymentStatus: 'Paid'\r\n//           })\r\n//         });\r\n\r\n//         if (paymentRes.ok) {\r\n//           alert('Payment Successful!');\r\n//           clearCart();\r\n//           navigate('/'); // or Thank You page\r\n//         } else {\r\n//           alert('Payment captured but failed to update order.');\r\n//         }\r\n//       },\r\n//       prefill: {\r\n//         name: address.name,\r\n//         email: 'user@example.com', // optional\r\n//         contact: '9999999999' // optional\r\n//       },\r\n//       theme: {\r\n//         color: \"#3399cc\"\r\n//       }\r\n//     };\r\n    \r\n//     const rzp = new window.Razorpay(options);\r\n//     rzp.open();\r\n//   } else {\r\n//     alert('Failed to create order. Try again.');\r\n//   }\r\n// };\r\n\r\n\r\n//   return (\r\n//     <div className=\"container mt-5\">\r\n//       <h2 className=\"mb-4\">Checkout</h2>\r\n//       <form className=\"row g-3\" onSubmit={handleSubmit}>\r\n//         <div className=\"col-md-6\">\r\n//           <label htmlFor=\"name\" className=\"form-label\">Full Name</label>\r\n//           <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange={handleChange} required />\r\n//         </div>\r\n        \r\n//         <div className=\"col-12\">\r\n//           <label htmlFor=\"street\" className=\"form-label\">Street Address</label>\r\n//           <input type=\"text\" className=\"form-control\" id=\"street\" name=\"street\" onChange={handleChange} required />\r\n//         </div>\r\n        \r\n//         <div className=\"col-md-6\">\r\n//           <label htmlFor=\"city\" className=\"form-label\">City</label>\r\n//           <input type=\"text\" className=\"form-control\" id=\"city\" name=\"city\" onChange={handleChange} required />\r\n//         </div>\r\n        \r\n//         <div className=\"col-md-4\">\r\n//           <label htmlFor=\"postalCode\" className=\"form-label\">Postal Code</label>\r\n//           <input type=\"text\" className=\"form-control\" id=\"postalCode\" name=\"postalCode\" onChange={handleChange} required />\r\n//         </div>\r\n        \r\n//         <div className=\"col-md-2\">\r\n//           <label htmlFor=\"country\" className=\"form-label\">Country</label>\r\n//           <input type=\"text\" className=\"form-control\" id=\"country\" name=\"country\" onChange={handleChange} required />\r\n//         </div>\r\n\r\n//         <div className=\"col-12\">\r\n//           <button type=\"submit\" className=\"btn btn-primary w-100\">Submit Order</button>\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checkout;\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate,useLocation } from 'react-router-dom';\r\n\r\nconst Checkout = () => {\r\n  const location = useLocation();\r\n  const { deliveryPreference, totalAmount, finalAmount } = location.state || {};\r\n\r\n  const userId = localStorage.getItem(\"USER\");  // USER ID get karo\r\n  localStorage.setItem(\"cart_\" + userId, JSON.stringify(cartData)); // cart ko userId ke saath store karo\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [address, setAddress] = useState({\r\n    name: '',\r\n    street: '',\r\n    city: '',\r\n    postalCode: '',\r\n    country: ''\r\n  });\r\n  useEffect(() => {\r\n    const userId = localStorage.getItem(\"USER\"); // USER ID get karo\r\nconst storedCart = localStorage.getItem(\"cart_\" + userId); // cart ko userId ke saath fetch karo\r\nconst cartItems = storedCart ? JSON.parse(storedCart) : []; // agar cart hai to parse kar ke array banalo\r\n\r\n    if (storedCart) {\r\n      setCartItems(JSON.parse(storedCart));\r\n    }\r\n  }, []);\r\n  \r\n\r\n  // âœ… Load cart from localStorage\r\n  useEffect(() => {\r\n    if (userId) {\r\n      const savedCart = localStorage.getItem(`cart_${userId}`);\r\n      if (savedCart) {\r\n        try {\r\n          setCartItems(JSON.parse(savedCart));\r\n        } catch (err) {\r\n          console.error(\"Failed to parse cart JSON\", err);\r\n        }\r\n      }\r\n    }\r\n  }, [userId]);\r\n\r\n  // const clearCart = () => {\r\n  //   localStorage.removeItem(`cart_${userId}`);\r\n  //   setCartItems([]);\r\n  // };\r\n  const clearCart = () => {\r\n    const userId = localStorage.getItem(\"USER\");\r\n    localStorage.removeItem(\"cart_\" + userId);\r\n    localStorage.setItem(\"cartcount\", 0);\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n    setCartItems([]);\r\n  };\r\n  \r\n\r\n  const handleChange = (e) => {\r\n    setAddress({ ...address, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submit clicked âœ…\");\r\n    console.log(\"Cart Items:\", cartItems);\r\n\r\n    if (cartItems.length === 0) {\r\n      alert(\"Cart is empty!\");\r\n      return;\r\n    }\r\n\r\n    const totalAmount = cartItems.reduce((acc, item) => acc + (item.price * item.quantity), 0);\r\n\r\n    // Step 1: Place order\r\n    // const orderRes = await fetch('http://localhost:5001/placeorder', {\r\n    //   method: 'POST',\r\n    //   headers: { 'Content-Type': 'application/json' },\r\n    //   body: JSON.stringify({\r\n    //     userId,\r\n    //     cartItems, // sending full cartItems as per your Mongoose schema\r\n    //     shippingAddress: address,\r\n    //     totalAmount\r\n    //   })\r\n    // });\r\n\r\n    const orderRes = await fetch('http://localhost:5001/placeorder', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        userId,\r\n        cartItems,\r\n        shippingAddress: address,\r\n        deliveryPreference,\r\n        totalAmount: finalAmount\r\n      })\r\n    });\r\n    \r\n    const orderData = await orderRes.json();\r\n\r\n    if (orderRes.ok) {\r\n      const options = {\r\n        key: 'rzp_test_99IwqPHWTFKkXS',\r\n        amount: finalAmount * 100,\r\n        currency: \"INR\",\r\n        name: \"Softwizz\",\r\n        description: \"Order Payment\",\r\n        handler: async function (response) {\r\n          const paymentRes = await fetch(`http://localhost:5001/updatepayment/${orderData._id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              paymentId: response.razorpay_payment_id,\r\n              paymentStatus: 'Paid'\r\n            })\r\n          });\r\n\r\n          if (paymentRes.ok) {\r\n            alert('Payment Successful!');\r\n            clearCart();\r\n            localStorage.setItem(\"cartcount\", 0);\r\nwindow.dispatchEvent(new Event(\"storage\"));\r\nnavigate(\"/thankyou\"); // or redirect wherever you want\r\n           \r\n          } else {\r\n            alert('Payment captured but failed to update order.');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: address.name,\r\n          email: 'user@example.com',\r\n          contact: '9999999999'\r\n        },\r\n        theme: {\r\n          color: \"#3399cc\"\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } else {\r\n      alert('Failed to create order. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"mb-4\">Checkout</h2>\r\n      {cartItems.length > 0 ? (\r\n        cartItems.map((item, index) => (\r\n          <div key={index}>\r\n            <p>Product: {item.productName}</p>\r\n            <p>Quantity: {item.quantity}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>Your cart is empty.</p>\r\n      )}\r\n      <form className=\"row g-3\" onSubmit={handleSubmit}>\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Full Name</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <label htmlFor=\"street\" className=\"form-label\">Street Address</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"street\" name=\"street\" onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"city\" className=\"form-label\">City</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"city\" name=\"city\" onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"col-md-4\">\r\n          <label htmlFor=\"postalCode\" className=\"form-label\">Postal Code</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"postalCode\" name=\"postalCode\" onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"col-md-2\">\r\n          <label htmlFor=\"country\" className=\"form-label\">Country</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"country\" name=\"country\" onChange={handleChange} required />\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary w-100\">Submit Order</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}