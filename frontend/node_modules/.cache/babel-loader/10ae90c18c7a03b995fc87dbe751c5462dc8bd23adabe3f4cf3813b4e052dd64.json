{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\Admin\\\\ViewOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewOrders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const fetchOrders = async () => {\n    const res = await fetch(\"http://localhost:5000/api/orders\"); // change as per your API\n    const data = await res.json();\n    setOrders(data.orders);\n  };\n  const setDeliveryDate = async (orderId, deliveryDate) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/admin/set-delivery-date/${orderId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          deliveryDate\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Delivery date set successfully\");\n        console.log(data.order);\n        fetchOrders(); // refresh list\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"Failed to set delivery date:\", error);\n      alert(\"Something went wrong\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Admin Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", order.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \\u20B9\", order.totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.deliveryStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Delivery Date:\", \" \", order.deliveryDate ? new Date(order.deliveryDate).toLocaleDateString() : \"Not set\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setDeliveryDate(order._id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, order._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewOrders, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = ViewOrders;\nexport default ViewOrders;\nvar _c;\n$RefreshReg$(_c, \"ViewOrders\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ViewOrders","_s","orders","setOrders","fetchOrders","res","fetch","data","json","setDeliveryDate","orderId","deliveryDate","response","method","headers","body","JSON","stringify","ok","alert","console","log","order","message","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","userId","totalAmount","deliveryStatus","Date","toLocaleDateString","type","onChange","e","_id","target","value","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/Admin/ViewOrders.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ViewOrders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const fetchOrders = async () => {\r\n    const res = await fetch(\"http://localhost:5000/api/orders\"); // change as per your API\r\n    const data = await res.json();\r\n    setOrders(data.orders);\r\n  };\r\n\r\n  const setDeliveryDate = async (orderId, deliveryDate) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/admin/set-delivery-date/${orderId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ deliveryDate }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(\"Delivery date set successfully\");\r\n        console.log(data.order);\r\n        fetchOrders(); // refresh list\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to set delivery date:\", error);\r\n      alert(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold mb-4\">Admin Orders</h2>\r\n      {orders.map((order) => (\r\n        <div key={order._id} className=\"border p-4 mb-4\">\r\n          <p>User ID: {order.userId}</p>\r\n          <p>Total: â‚¹{order.totalAmount}</p>\r\n          <p>Status: {order.deliveryStatus}</p>\r\n          <p>\r\n            Delivery Date:{\" \"}\r\n            {order.deliveryDate\r\n              ? new Date(order.deliveryDate).toLocaleDateString()\r\n              : \"Not set\"}\r\n          </p>\r\n\r\n          <input\r\n            type=\"date\"\r\n            onChange={(e) => setDeliveryDate(order._id, e.target.value)}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewOrders;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}