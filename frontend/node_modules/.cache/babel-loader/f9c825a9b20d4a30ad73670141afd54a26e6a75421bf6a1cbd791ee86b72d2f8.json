{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\serviceProject\\\\frontend\\\\src\\\\components\\\\Modal1.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Services() {\n  _s();\n  const [show, setShow] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState();\n  const handleClose = () => setShow(false);\n  const handleShow = category => {\n    setSelectedCategory(category);\n    setShow(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"services-container mt-5 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: categories.map(category => {\n          /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-card\",\n            onClick: handleShow(category),\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: category.image,\n              style: {\n                width: \"50px\",\n                height: \"50px\",\n                marginLeft: \"10px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 7\n            }, this)]\n          }, category._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 5\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: show,\n        onHide: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: [selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.name, \"-\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: selectedCategory && selectedCategory.subcategories.length > 0 ?\n          /*#__PURE__*/\n          // Check if subcategories exist: Agar selected category me subcategories hain tabhi unhe dikhana hai.\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: selectedCategory.subcategories.map(sub => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [sub.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: sub.image,\n                  style: {\n                    width: \"50px\",\n                    height: \"50px\",\n                    marginLeft: \"10px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 7\n                }, this)]\n              }, sub._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 7\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 3\n            }, this), \"// Kuch categories ke liye extra sections diye gaye hain, jaise: // \\\"AC and Appliance Repair\\\" // \\\"Electrician, Plumber and Carpenter\\\" // Agar selected category inme se koi hai, tabhi ye sections dikhai jaayengi\", [\"AC and Appliance Repair\", \"Electrician,Plumber and Carpenter\"].includes(selectedCategory.name) &&\n            // Yeh check karta hai ki selected category ka naam in categories me hai ya nahi:\n\n            //\"AC and Appliance Repair\"\n            //\"Electrician,Plumber and Carpenter\"\n            // Agar selectedCategory.name in dono me se kisi ek ka match karega, tabhi aage ka code chalega.\n\n            selectedCategory.sections &&\n            //selectedCategory.sections\n            //ðŸ‘‰ Yeh check karta hai ki selectedCategory ke andar sections exist karta hai ya nahi.\n            //ðŸ“Œ Agar sections exist karega, tabhi .map() chalega, warna kuch nahi hoga.\n\n            selectedCategory.sections.map(sub => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: sub.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: sub.items.map(subs => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: [subs.name, /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: subs.image,\n                    style: {\n                      width: \"50px\",\n                      height: \"50px\",\n                      marginLeft: \"10px\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 11\n                  }, this)]\n                }, subs._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 9\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 5\n              }, this)]\n            }, sub.title, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 3\n            }, this))]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No subcategories available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(Services, \"lC7W6UKiWaVoLbSeRxvBdaKUL+M=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["useState","Button","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","Services","_s","show","setShow","categories","setCategories","selectedCategory","setSelectedCategory","handleClose","handleShow","category","children","className","map","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","style","width","height","marginLeft","_id","onHide","Header","closeButton","Title","Body","subcategories","length","sub","includes","sections","title","items","subs","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/serviceProject/frontend/src/components/Modal1.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction Services() {\r\n  const [show, setShow] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState();\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = (category) => {\r\n    setSelectedCategory(category);\r\n    setShow(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n<div className=\"services-container mt-5 p-4\">\r\n<div className=\"categories-container\">\r\n{/* categories ek array hai jo API se aaya data store kar raha hai. Har category ek object hai.\r\nmap() function is array ke har ek element pe loop chalata hai aur uske liye ek div (category card) generate karta hai.\r\nJab user kisi category pe click karega, to handleShow(category) function call hoga. */}\r\n  {categories.map((category)=>{\r\n    <div  key={category._id} className=\"category-card\" onClick={handleShow(category)}>\r\n      <strong>{category.name}</strong>\r\n      <img src={category.image} style={{ width: \"50px\", height: \"50px\", marginLeft: \"10px\" }}></img>\r\n    </div>\r\n  })}\r\n</div>\r\n\r\n<Modal show={show} onHide={handleClose}>\r\n{/* show={show}: Jab show state true hoga tab modal dikhega.\r\nonHide={handleClose}: Jab user close karega to modal band hoga */}\r\n\r\n<Modal.Header closeButton>\r\n          <Modal.Title>{selectedCategory?.name}-</Modal.Title>\r\n        </Modal.Header>\r\n        {/* Yeh optional chaining (?.) ka use kar raha hai.\r\nAgar selectedCategory exist karega, to selectedCategory.name return karega.\r\nAgar selectedCategory null ya undefined ho, to error nahi aayega, sirf blank (undefined) return karega. */}\r\n\r\n<Modal.Body>{selectedCategory&& selectedCategory.subcategories.length > 0 ?(\r\n  // Check if subcategories exist: Agar selected category me subcategories hain tabhi unhe dikhana hai.\r\n  \r\n  <> \r\n  <ul className=\"list-group\">\r\n    {selectedCategory.subcategories.map((sub)=>(\r\n      <li key={sub._id} className=\"list-group-item\">{sub.name}\r\n      <img src={sub.image} style={{ width: \"50px\", height: \"50px\", marginLeft: \"10px\" }}></img></li>\r\n\r\n    ))}\r\n  </ul>\r\n\r\n// Kuch categories ke liye extra sections diye gaye hain, jaise:\r\n      // \"AC and Appliance Repair\"\r\n     // \"Electrician, Plumber and Carpenter\"\r\n      // Agar selected category inme se koi hai, tabhi ye sections dikhai jaayengi\r\n\r\n{[\"AC and Appliance Repair\", \"Electrician,Plumber and Carpenter\"].includes(selectedCategory.name) &&\r\n  // Yeh check karta hai ki selected category ka naam in categories me hai ya nahi:\r\n\r\n//\"AC and Appliance Repair\"\r\n//\"Electrician,Plumber and Carpenter\"\r\n// Agar selectedCategory.name in dono me se kisi ek ka match karega, tabhi aage ka code chalega.\r\n\r\nselectedCategory.sections &&\r\n\r\n//selectedCategory.sections\r\n//ðŸ‘‰ Yeh check karta hai ki selectedCategory ke andar sections exist karta hai ya nahi.\r\n//ðŸ“Œ Agar sections exist karega, tabhi .map() chalega, warna kuch nahi hoga.\r\n\r\nselectedCategory.sections.map((sub) => (\r\n  <div key={sub.title}>\r\n    <h2>{sub.title}</h2>\r\n    <ul>\r\n      {sub.items.map((subs) => (\r\n        <li key={subs._id} className=\"list-group-item\">\r\n          {subs.name}\r\n          <img src={subs.image} style={{ width: \"50px\", height: \"50px\", marginLeft: \"10px\" }} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n))\r\n}\r\n</>\r\n): (\r\n  <p>No subcategories available.</p>\r\n)}\r\n\r\n\r\n\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n        </Modal>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Services;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}